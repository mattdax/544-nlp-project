SELECT COUNT ( city_name ) FROM city
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" );
SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "alaska" ) AND state_name  =  "alaska";
SELECT COUNT ( DISTINCT capital ) FROM state WHERE state_name  =  "rhode island";
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" );
SELECT state.capital FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.length  =  ( SELECT MAX ( river.length ) FROM river JOIN state ON river.traverse  =  state.state_name );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT COUNT ( river_name ) FROM river WHERE traverse  =  "idaho";
SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  "colorado" );
SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );
SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT area FROM state WHERE state_name  =  "new mexico";
SELECT state.state_name FROM state JOIN city ON state.capital  =  city.city_name WHERE city.population  =  ( SELECT MAX ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name );
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "tennessee" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  "tennessee" );
SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info );
SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  "alabama" );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name );
SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" );
SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );
SELECT state_name,  MAX ( highest_elevation ) FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE lowest_elevation  >  0 ) GROUP BY state_name;
SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT population FROM state WHERE state_name  =  "california";
SELECT capital FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );
SELECT COUNT ( border ) FROM border_info WHERE state_name  =  "kentucky";
SELECT river.river_name FROM city JOIN state ON city.state_name  =  state.state_name JOIN river ON river.traverse  =  state.state_name WHERE state.state_name IN ( SELECT state_name FROM city GROUP BY state_name ORDER BY COUNT (*) DESC LIMIT 1 ) AND river.length  =  ( SELECT MAX ( river.length ) FROM river JOIN state ON river.traverse  =  state.state_name WHERE state.state_name IN ( SELECT state_name FROM city GROUP BY state_name ORDER BY COUNT (*) DESC LIMIT 1 ) );
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) );
SELECT highlow.lowest_elevation FROM highlow JOIN river ON highlow.state_name  =  river.traverse WHERE river.river_name  =  "mississippi";
SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "colorado" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "colorado" );
SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  "texas" );
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;
SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );
SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );
SELECT COUNT ( border ) FROM border_info WHERE state_name  =  "kentucky";
SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "tennessee" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  "tennessee" );
SELECT highest_elevation FROM highlow WHERE state_name  =  "delaware";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" );
SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
SELECT state_name FROM state WHERE capital  =  ( SELECT MAX ( capital ) FROM state );
SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );
SELECT state_name FROM state EXCEPT SELECT border FROM border_info
SELECT COUNT ( border ) FROM border_info WHERE state_name  =  "kentucky";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "alabama" );
SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT highlow.lowest_elevation FROM highlow JOIN river ON highlow.state_name  =  river.traverse WHERE river.river_name  =  "mississippi";
SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );
SELECT LENGTH FROM river WHERE traverse  =  "texas" AND LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" );
SELECT COUNT ( river_name ) FROM river WHERE river_name  =  "colorado";
SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name  =  "alaska" ) AND state_name  =  "alaska";
SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "alabama" );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name );
SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );
SELECT LENGTH FROM river WHERE river_name  =  ( SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas" );
SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" ) ORDER BY population DESC LIMIT 1;
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  "texas" );
SELECT density FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );
SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.capital  =  "des moines";
SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );
SELECT area FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );
SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "colorado" );
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) );
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;
SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" AND highlow.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" );
SELECT population FROM city WHERE city_name  =  "seattle" AND state_name  =  "washington";
SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  "colorado" );
SELECT COUNT ( river_name ) FROM river WHERE traverse  =  "idaho";
SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );
SELECT population FROM city WHERE city_name  =  "boulder";
SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name IN ( SELECT border FROM border_info WHERE state_name  =  "mississippi" ) ORDER BY highlow.highest_elevation DESC;
SELECT highlow.highest_point FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.density  =  ( SELECT MIN ( density ) FROM state );
SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );
SELECT state.capital FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas";
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;
SELECT state.capital FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas";
SELECT COUNT ( border ) FROM border_info WHERE state_name  =  "kentucky";
SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "alaska" ) AND state_name  =  "alaska";
SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );
SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "alabama" );
SELECT state.capital FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas";
SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" ) ORDER BY population DESC LIMIT 1;
SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );
SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "tennessee" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  "tennessee" );
SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  "colorado" );
SELECT COUNT ( border ) FROM border_info WHERE state_name  =  "kentucky";
SELECT state.capital FROM state JOIN city ON state.state_name  =  city.state_name WHERE city.city_name  =  "durham";
SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE river_name  =  "texas" ) AND river_name  =  "texas";
SELECT city_name FROM city WHERE state_name  =  ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" ) ORDER BY population DESC LIMIT 1;
SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" AND highlow.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" );
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.journalId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "mohammad rastegari";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet";
SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );
SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital  =  "albany" );
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  "tennessee" );
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT COUNT (DISTINCT border) FROM border_info
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "brian curless" INTERSECT SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "TACL" AND paper.year  =  2014 ORDER BY paper.numCiting DESC;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT state.capital FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.border IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) );
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2000;
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId  =  venue.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "RGB-D Object Dataset" AND keyphrase.keyphraseName  =  "Class consistent multi-modal fusion" AND paper.year  =  2016 AND venue.venueName  =  "CVPR";
SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Multiuser Receiver" AND dataset.datasetName  =  "Decision Feedback" AND paper.year  =  2015;
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning";
SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  "atlanta" ) );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "idaho" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "idaho" );
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "chi";
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  "tennessee" );
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2012 AND venue.venueName  =  "acl" AND keyphrase.keyphraseName  =  "Parsing";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL" AND venue.venueName  =  "NIPS";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2015;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ras bodik";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT DISTINCT capital FROM state WHERE population  >  150000;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL" AND venue.venueName  =  "NIPS";
SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  "usa" );
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mirella Lapata";
SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.population  =  ( SELECT MIN ( population ) FROM state );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
SELECT state_name FROM state WHERE capital  =  "salem";
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ) ) )
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "keyphrase0";
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT state_name FROM city GROUP BY state_name ORDER BY avg(population) LIMIT 1
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "zachary tatlock";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sanjeev arora" ORDER BY paper.year DESC;
SELECT state.capital FROM state JOIN city ON state.capital  =  city.city_name WHERE city.population  =  ( SELECT MIN ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name );
SELECT DISTINCT paper.paperId ,  paper.year FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT traverse FROM river WHERE river_name  =  "mississippi";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name IN ( SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE state_name  =  "virginia" ) ) );
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN venue ON venue.venueId  =  paper.venueId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  "boston" );
SELECT DISTINCT paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Michael Stonebraker" AND venue.venueName  =  "VLDB" ORDER BY paper.year ASC;
SELECT state.population FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas" ORDER BY state.area DESC LIMIT 1;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT highlow.highest_point FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.area  =  ( SELECT MAX ( area ) FROM state );
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2000;
SELECT state_name FROM state WHERE capital  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" );
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE venue.venueName  =  "NIPS" AND keyphrase.keyphraseName  =  "TAIL";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT COUNT ( state_name ) FROM city WHERE city_name  =  "springfield";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2000;
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT writes.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "rio grande" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "rio grande" );
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mirella Lapata";
SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  "atlanta" ) );
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "wyoming" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "wyoming" );
SELECT state.density FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.length  =  ( SELECT MAX ( LENGTH ) FROM river );
SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "nebraska" );
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );
SELECT DISTINCT writes.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "noah a smith";
SELECT state.capital FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE highlow.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );
SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mark Steedman";
SELECT population FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "montana" ) AND state_name  =  "montana";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "dependent types";
SELECT COUNT ( river_name ) FROM river;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "Parsing" AND paper.paperId IN (SELECT paperKeyphrase.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "acl");
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ) ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ) );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );
SELECT border_info.border FROM border_info JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border
SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  "colorado" );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "TACL" AND paper.year  =  2014 ORDER BY paper.numCiting DESC;
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "David M. Blei" AND venue.venueName  =  "AISTATS";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT highest_point FROM highlow WHERE state_name!= "alaska" ORDER BY highest_elevation DESC LIMIT 1
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sanjeev arora" ORDER BY paper.year DESC;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT writes.paperId FROM writes JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "acl" AND paper.title  =  "Parsing";
SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT COUNT ( traverse ) FROM river WHERE river_name  =  "missouri";
SELECT state.capital FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE highlow.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT capital FROM state WHERE state_name  =  ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "california" );
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT city.population FROM state JOIN city ON state.capital  =  city.city_name WHERE state.state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) AND city.population  =  ( SELECT MAX ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name WHERE state.state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT SUM ( state.population ) FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas";
SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT highlow.lowest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.area  =  ( SELECT MAX ( area ) FROM state );
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT density FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2010 AND venue.venueName  =  "EMNLP" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT COUNT ( state_name ) FROM city WHERE city_name  =  "springfield";
SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );
SELECT COUNT ( river_name ) FROM river WHERE LENGTH  >  750 AND traverse  =  "ohio";
SELECT COUNT ( border ) FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2010 AND venue.venueName  =  "EMNLP" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT COUNT ( traverse ) FROM river WHERE river_name  =  "missouri";
SELECT COUNT ( traverse ) FROM river WHERE river_name  =  "mississippi";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2010 AND venue.venueName  =  "EMNLP" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT population / area FROM state WHERE state_name  =  "pennsylvania";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId WHERE author.authorName  =  "Mirella Lapata";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "dependent types" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT traverse FROM river ) ) AND state_name IN ( SELECT traverse FROM river );
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT DISTINCT paper.year ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke S Zettlemoyer";
SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT COUNT ( border_info.state_name ) FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" INTERSECT SELECT COUNT ( border_info.state_name ) FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "new mexico";
SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "rio grande" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "rio grande" );
SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  <  2014 AND venue.venueName  =  "ACL";
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId WHERE author.authorName  =  "noah a smith";
SELECT river.river_name FROM river JOIN border_info ON river.traverse  =  border_info.border WHERE border_info.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
SELECT COUNT ( DISTINCT traverse ) FROM river;
SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  writes.authorId FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId GROUP BY writes.authorId ORDER BY COUNT ( cite.citingPaperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT COUNT ( traverse ) FROM river WHERE river_name  =  "missouri";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ) ) AND traverse IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet";
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "florida" ) );
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT COUNT ( state_name ) FROM city WHERE city_name  =  "springfield";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT COUNT ( state_name ) FROM city WHERE city_name  =  "springfield";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT COUNT ( traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet";
SELECT border_info.border FROM border_info JOIN state ON border_info.border  =  state.state_name WHERE state.state_name  =  "texas" INTERSECT SELECT traverse FROM river WHERE LENGTH  >  750;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "mirella lapata" AND paper.year  =  2016;
SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id JOIN USER ON USER.user_id  =  tip.user_id WHERE category.category_name  =  "Pet Groomers";
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Philipp Koehn" AND keyphrase.keyphraseName  =  "Machine Translation Output";
SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "Bacterial Wilt" AND paper.year  =  2016;
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "Dallas" AND category.category_name  =  "restaurant" AND USER.name  =  "Patrick";
SELECT COUNT ( DISTINCT review.text ) FROM USER JOIN review ON USER.user_id  =  review.user_id WHERE review.month  =  "March" AND review.year  =  2014 AND USER.name  =  "Michelle";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN venue ON venue.venueId  =  paper.venueId WHERE keyphrase.keyphraseName  =  "neural attention" AND paper.year  =  2016 AND venue.venueName  =  "ACL";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Ye Cao" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT SUM ( tip.likes ) FROM USER JOIN tip ON USER.user_id  =  tip.user_id WHERE USER.name  =  "Niloofar";
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ali farhadi" AND venue.venueName  =  "eccv" AND paper.year  =  2016;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "ImageNet" AND keyphrase.keyphraseName  =  "deep learning";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ali farhadi" AND paper.year  =  2016 AND venue.venueName  =  "eccv";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId WHERE venue.venueName  =  "sigcomm" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "semantic parsing" AND paper.year  >  2005 GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "jamie callan" GROUP BY paper.year;
SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet" AND paper.year  =  2014;
SELECT COUNT ( DISTINCT tip.text ) FROM USER JOIN tip ON USER.user_id  =  tip.user_id WHERE tip.month  =  "April" AND USER.name  =  "Michelle";
SELECT COUNT ( DISTINCT review.text ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id WHERE business.name  =  "Cafe Zinho" AND business.state  =  "Texas";
SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND neighbourhood.neighbourhood_name  =  "Stone Meadows";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS";
SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet" AND paper.year  =  2014 AND paper.venueId  =  "eccv";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "sigir";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN venue ON venue.venueId  =  paper.venueId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "ACL" AND paper.numCiting  >  7;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  (SELECT max(YEAR) FROM paper WHERE venue.venueName  =  "deep learning") AND venue.venueName  =  "deep learning";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "benjamin mako hill" ORDER BY paper.year ASC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "instance segmentation" AND keyphrase.keyphraseName  =  "journal";
SELECT neighbourhood.neighbourhood_name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND business.rating  <  2.5 AND category.category_name  =  "Italian";
SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Takashi Matsumoto";
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Mirella Lapata" ORDER BY paper.year DESC;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.name  =  "Bistro Di Napoli" AND review.year  =  2015;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN journal ON paper.journalId  =  journal.journalId WHERE journal.journalName  =  "Cell" AND paper.year  =  2015;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "semantic parsing" AND paper.year  >  2005 GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "benjamin mako hill" ORDER BY paper.year ASC;
SELECT tip.text FROM USER JOIN review ON USER.user_id  =  review.user_id JOIN tip ON review.business_id  =  tip.business_id WHERE review.year  =  2012;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing" GROUP BY paper.year;
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "character recognition" AND paper.year  <  2010;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet" AND paper.year  =  2014 AND venue.venueName  =  "eccv";
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "Bacterial Wilt" AND paper.year  =  2016;
SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN cite ON paper.paperId  =  cite.citedPaperId GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( cite.citingPaperId ) DESC;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "chi" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT DISTINCT journal.journalName FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN venue ON venue.venueId  =  paper.venueId JOIN journal ON venue.venueId  =  journal.journalId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName LIKE "Temporal Data";
SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniel Jurafsky";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "dan klein" AND paper.venueId  =  (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "dan klein" AND venue.venueName  =  "emnlp");
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Ye Cao" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "pldi";
SELECT SUM ( tip.likes ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.name  =  "Cafe Zinho" AND category.category_name  =  "category_category_name0";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "jamie callan" GROUP BY paper.year;
SELECT business.name FROM review JOIN business ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE review.rating  =  5 AND USER.name  =  "Niloofar";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" ORDER BY paper.year DESC;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "jamie callan" GROUP BY paper.year;
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE venue.venueName  =  "NIPS";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
SELECT DISTINCT COUNT ( paper.paperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS" GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Su-In Lee" AND paper.year  <  2012;
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "convolutional neural networks" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet" AND paper.year  =  2014;
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( paper.paperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS" GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "chi" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.authorId ) DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Stonebraker" AND paper.title  =  "GIS Database";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "michael i. jordan" AND paper.year  =  2016;
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id WHERE category.category_name  =  "restaurant";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM writes JOIN author ON writes.authorId  =  author.authorId GROUP BY writes.authorId HAVING COUNT ( DISTINCT writes.paperId )  >=  5;
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "CVPR" GROUP BY paper.paperId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Samuel Madden" AND venue.venueName!= "PVLDB";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Brian DeRenzi" GROUP BY keyphrase.keyphraseName ORDER BY COUNT (*) DESC LIMIT 1;
SELECT DISTINCT dataset.datasetId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE venue.venueName  =  "ACL";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId WHERE dataset.datasetName LIKE "ImageNet" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT COUNT ( DISTINCT tip.text ) FROM USER JOIN tip ON USER.user_id  =  tip.user_id WHERE tip.year  =  2010 AND USER.name  =  "Michelle";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Ameet Soni" AND author.authorName  =  "Ras Bodik";
SELECT review_count FROM business WHERE name  =  "Acacia Cafe";
SELECT DISTINCT COUNT ( paper.paperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS" GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "michael i. jordan" AND paper.year  =  2016;
SELECT DISTINCT journal.journalName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN journal ON paper.journalId  =  journal.journalId WHERE author.authorName  =  "Donald E Knuth" ORDER BY paper.year DESC;
SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Takashi Matsumoto";
SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "Dallas" AND business.name  =  "Texas de Brazil" AND business.state  =  "Texas" AND category.category_name  =  "restaurant";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT COUNT ( DISTINCT neighbourhood.neighbourhood_name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND business.rating  =  5;
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Dan Makumbi" AND paper.title  =  "Genetic Identity";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "chi" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT AVG (review.rating) FROM review JOIN USER ON review.user_id  =  USER.user_id WHERE USER.name  =  "Michelle";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Daniel Jurafsky";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ali farhadi" AND paper.year  =  2016 AND venue.venueName  =  "eccv";
SELECT USER.name FROM USER JOIN review ON USER.user_id  =  review.user_id GROUP BY USER.name HAVING avg(review.rating)  <  3;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "convolutional neural networks" AND paper.year  =  2018;
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN venue ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paperKeyphrase.paperId  =  paper.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Daniel Jurafsky";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "ACL" GROUP BY writes.authorId;
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN venue ON venue.venueId  =  paper.venueId WHERE dataset.datasetName  =  "ImageNet" AND venue.venueName  =  "cvpr";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Brian DeRenzi";
SELECT DISTINCT cite.citedPaperId FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN cite ON paper.paperId  =  cite.citingPaperId GROUP BY cite.citedPaperId HAVING COUNT ( DISTINCT cite.citingPaperId )  >=  5;
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  cite.citingPaperId JOIN author ON writes.authorId  =  author.authorId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "dan klein" AND author.authorName  =  "michael i. jordan";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Noah A Smith";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "Dallas" AND category.category_name  =  "restaurant" AND USER.name  =  "Patrick";
SELECT DISTINCT COUNT ( cite.citedPaperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "sigir";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName!= "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "Machine Learning" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN venue ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.name  =  "Vintner Grill" AND review.year  =  2010;
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
SELECT business.name FROM review JOIN business ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE USER.name  =  "Niloofar";
SELECT COUNT ( DISTINCT review.text ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE neighbourhood.neighbourhood_name  =  "South Summerlin";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  writes.authorId FROM writes JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId WHERE writes.authorId  =  "Daniel A Reed" GROUP BY writes.authorId ORDER BY COUNT ( cite.citingPaperId ) DESC;
SELECT COUNT ( DISTINCT business.name ) FROM review JOIN business ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE review.year  =  2010 AND USER.name  =  "Michelle";
SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade" AND paper.year  =  2010;
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "San Diego" AND review.year  =  2010 AND USER.name  =  "Christine";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Pedro Domingos";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "oren etzioni" GROUP BY keyphrase.keyphraseName ORDER BY COUNT (*) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "michael i. jordan" AND author.authorName  =  "dan klein";
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT DISTINCT COUNT ( cite.citedPaperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Artificial Intelligence" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "ACL" EXCEPT SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "ACL" GROUP BY paper.paperId HAVING COUNT ( DISTINCT cite.citingPaperId )  <  5;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" GROUP BY venue.venueId ORDER BY COUNT ( DISTINCT paper.paperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "question answering" AND paper.year BETWEEN 2011 AND 2016;
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "Neutralizing Antibody" AND paper.year  =  2012;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS";
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "nature communications";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Luke S Zettlemoyer";
SELECT COUNT ( DISTINCT review.text ) FROM USER JOIN review ON USER.user_id  =  review.user_id WHERE USER.name  =  "Adrienne";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "michael i. jordan" AND paper.year  =  2016;
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" ORDER BY paper.numCiting DESC;
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName!= "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  writes.authorId FROM writes JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId WHERE writes.authorId  =  "Daniel A Reed" GROUP BY writes.authorId ORDER BY COUNT ( cite.citingPaperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "chi" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "sigir";
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year DESC;
SELECT COUNT ( DISTINCT review.text ) FROM USER JOIN review ON USER.user_id  =  review.user_id WHERE review.year  =  2015 AND USER.name  =  "Niloofar";
SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2010 AND venue.venueName  =  "sigcse";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Daniel Jurafsky";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sergey levine" ORDER BY paper.year DESC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "oren etzioni";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN venue ON venue.venueId  =  paper.venueId WHERE keyphrase.keyphraseName  =  "Euclidean Distance" AND venue.venueName  =  "NIPS";
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "escape games";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Armstrong" AND paper.year BETWEEN 1990 AND 2000;
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName!= "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "Dallas" AND category.category_name  =  "Irish Pub";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE venue.venueName  =  "NIPS";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Stonebraker" AND paper.title  =  "GIS Database";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "semantic parsing" AND paper.year  >  2005 GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT COUNT ( DISTINCT tip.text ) FROM USER JOIN tip ON USER.user_id  =  tip.user_id WHERE tip.year  =  2010 AND USER.name  =  "Michelle";
SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "Pittsburgh" AND category.category_name  =  "Sushi" AND review.text  =  "Sushi Too";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mary Crainie" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ohad shamir" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT business.name FROM checkin JOIN business ON checkin.business_id  =  business.business_id GROUP BY business.name ORDER BY sum(checkin.count) DESC LIMIT 1;
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "question answering" AND paper.year  =  2016;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "li dong" AND keyphrase.keyphraseName  =  "semantic parsing" AND venue.venueName  =  "acl" AND paper.year  =  2016;
SELECT COUNT ( DISTINCT tip.text ) FROM USER JOIN tip ON USER.user_id  =  tip.user_id WHERE USER.name  =  "Michelle";
SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE keyphrase.keyphraseName  =  "deep reinforcement learning" AND venue.venueName  =  "nips";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
SELECT DISTINCT COUNT ( cite.citedPaperId ) ,  paper.year FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "luke zettlemoyer" GROUP BY paper.year;
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "ACL" EXCEPT SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "ACL" GROUP BY paper.paperId HAVING COUNT ( DISTINCT cite.citingPaperId )  <  5;
SELECT author.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE keyword.keyword  =  "Relational Database" GROUP BY author.name ORDER BY COUNT ( DISTINCT publication.title ) DESC LIMIT 1;
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND publication.citation_num  >  200;
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" GROUP BY keyword.keyword ORDER BY COUNT ( DISTINCT publication.title ) DESC LIMIT 1;
SELECT author.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE journal.name  =  "PVLDB" GROUP BY author.name ORDER BY COUNT ( DISTINCT publication.title ) DESC LIMIT 1;
SELECT publication.reference_num FROM publication JOIN publication_keyword ON publication.pid  =  publication_keyword.pid JOIN keyword ON publication_keyword.kid  =  keyword.kid WHERE keyword.keyword  =  "Making database systems usable";
SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "denny" AND GEOGRAPHIC.REGION  =  "bay area";
SELECT COUNT ( DISTINCT keyword.keyword ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid WHERE publication.title  =  "Making database systems usable";
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN organization ON organization.oid  =  journal.oid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan";
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Yunyao Li" AND journal.name  =  "PVLDB" AND publication.year  >  2005;
SELECT citation_num FROM publication WHERE title  =  "Making database systems usable";
SELECT COUNT ( DISTINCT actor.name  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.nationality  =  "China" AND movie.title  =  "Rush Hour 3";
SELECT publication.title FROM publication JOIN cite ON publication.pid  =  cite.cited WHERE publication.year  >  2000 GROUP BY publication.title ORDER BY COUNT ( DISTINCT cite.citing ) DESC LIMIT 1;
SELECT COUNT ( DISTINCT author.name ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE publication.title  =  "Making database systems usable";
SELECT citation_num FROM publication WHERE title  =  "Making database systems usable" AND YEAR  <  2010;
SELECT COUNT ( DISTINCT publication.title ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND keyword.keyword  =  "Information Retrieval";
SELECT publication.title FROM publication JOIN cite ON publication.pid  =  cite.cited GROUP BY cite.cited ORDER BY COUNT ( DISTINCT cite.citing ) DESC LIMIT 1;
SELECT COUNT ( DISTINCT keyword.keyword ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN publication_keyword ON publication.pid  =  publication_keyword.pid JOIN keyword ON publication_keyword.kid  =  keyword.kid WHERE organization.name  =  "University of Michigan";
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid  =  domain_publication.pid JOIN DOMAIN ON DOMAIN.did  =  domain_publication.did WHERE DOMAIN.name  =  "Databases" AND publication.citation_num  >  200;
SELECT author.name FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE publication.title  =  "Making database systems usable";
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND journal.name  =  "PVLDB";
SELECT COUNT ( DISTINCT journal.name ) FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT COUNT ( DISTINCT keyword.keyword ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
SELECT movie.title FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  (SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "Revolutionary Road")
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id GROUP BY business.name ORDER BY count(*) DESC LIMIT 1;
SELECT conference.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE keyword.keyword  =  "Relational Database" GROUP BY conference.name HAVING COUNT ( DISTINCT publication.title )  >  60;
SELECT movie.title,  movie.budget FROM movie JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE director.name  =  "Quentin Tarantino" ORDER BY movie.release_year DESC LIMIT 1
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND journal.name  =  "PVLDB" AND publication.citation_num  >  200;
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY keyword.keyword ORDER BY COUNT (*) DESC LIMIT 1;
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE actor.name  =  "Taraneh Alidoosti" AND director.name  =  "Asghar Farhadi";
SELECT author.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE journal.name  =  "PVLDB" GROUP BY author.name HAVING COUNT ( DISTINCT publication.title )  >  10;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT author.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB" GROUP BY author.name HAVING COUNT ( DISTINCT publication.title )  >  10;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" INTERSECT SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "Yunyao Li" INTERSECT SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "Cong Yu"
SELECT author.name FROM writes JOIN author ON writes.aid  =  author.aid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava";
SELECT publication.title FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND keyword.keyword  =  "User Study";
SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN DOMAIN ON DOMAIN.did  =  publication.cid WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan" GROUP BY author.name ORDER BY SUM ( publication.citation_num ) DESC LIMIT 1;
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Jennifer Aniston" AND movie.release_year  >  2010;
SELECT journal.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE keyword.keyword  =  "Relational Database" GROUP BY journal.name ORDER BY COUNT (*) DESC LIMIT 1;
SELECT author.name FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes
SELECT COUNT ( DISTINCT keyword.keyword ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.name  =  "Quentin Tarantino" ORDER BY movie.release_year DESC LIMIT 1
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.name  =  "Woody Strode" AND actor.name  =  "Jason Robards";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND conference.name  =  "VLDB" AND publication.year  >  2000;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.year  >  2000;
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND publication.year  >  2000;
SELECT conference.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid  =  domain_publication.pid JOIN DOMAIN ON DOMAIN.did  =  domain_publication.did WHERE DOMAIN.name  =  "Databases" AND publication.citation_num  >  200 AND publication.year  >  2000;
SELECT publication.title FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND keyword.keyword  =  "Keyword search";
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" ORDER BY publication.citation_num DESC LIMIT 1;
SELECT journal.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE keyword.keyword  =  "Relational Database" GROUP BY journal.name HAVING COUNT ( DISTINCT publication.title )  >  60;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Jason Robards" INTERSECT SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Woody Strode"
SELECT author.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB" GROUP BY author.name ORDER BY COUNT ( DISTINCT publication.title ) DESC LIMIT 1;
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid  =  domain_publication.pid JOIN DOMAIN ON DOMAIN.did  =  domain_publication.did WHERE DOMAIN.name  =  "Databases" AND publication.year  >  2000 ORDER BY publication.citation_num DESC LIMIT 1;
SELECT journal.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE keyword.keyword  =  "Relational Database" GROUP BY journal.name ORDER BY COUNT (*) DESC LIMIT 1;
SELECT COUNT ( DISTINCT actor.name  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE movie.title  =  "Saving Private Ryan";
SELECT conference.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE keyword.keyword  =  "Relational Database" GROUP BY conference.name ORDER BY COUNT (*) DESC LIMIT 1;
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Yunyao Li" AND journal.name  =  "PVLDB";
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" GROUP BY keyword.keyword ORDER BY COUNT (*) DESC LIMIT 1;
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" GROUP BY keyword.keyword HAVING COUNT ( DISTINCT publication.title )  >  100;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.name  =  "Woody Strode" AND actor.name  =  "Jason Robards";
SELECT COUNT ( DISTINCT publication.title ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND keyword.keyword  =  "User Study";
SELECT COUNT ( DISTINCT publication.title ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND keyword.keyword  =  "Keyword search";
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE actor.name  =  "Taraneh Alidoosti" AND director.name  =  "Asghar Farhadi";
SELECT COUNT ( DISTINCT movie.title  ) FROM tags JOIN movie ON tags.msid  =  movie.mid JOIN keyword ON tags.kid  =  keyword.id WHERE keyword.keyword  =  "Iraq war" AND movie.release_year  =  2015;
SELECT COUNT ( DISTINCT conference.name ) FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT citation_num FROM publication WHERE title  =  "Making database systems usable";
SELECT author.name FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY keyword.keyword HAVING COUNT ( DISTINCT publication.title )  >  10;
SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Quentin Tarantino" AND movie.release_year  <  2002 INTERSECT SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Quentin Tarantino" AND movie.release_year  >  2010
SELECT COUNT ( DISTINCT publication.title ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN conference ON publication.cid  =  conference.cid WHERE organization.name  =  "University of Michigan" AND conference.name  =  "VLDB";
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.nationality  =  "China" GROUP BY movie.title ORDER BY count(*) DESC LIMIT 1
SELECT movie.title FROM tags JOIN keyword ON tags.kid  =  keyword.id JOIN movie ON tags.msid  =  movie.mid WHERE keyword.keyword  =  "nuclear weapons";
SELECT COUNT ( DISTINCT movie.title  ) ,  movie.release_year FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Brad Pitt" GROUP BY movie.release_year
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid  =  domain_publication.pid JOIN DOMAIN ON DOMAIN.did  =  domain_publication.did WHERE DOMAIN.name  =  "Databases" ORDER BY publication.citation_num DESC LIMIT 1;
SELECT COUNT ( DISTINCT author.name ) FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE journal.name  =  "PVLDB";
SELECT conference.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE keyword.keyword  =  "Relational Database" GROUP BY conference.name ORDER BY COUNT ( DISTINCT publication.title ) DESC LIMIT 1;
SELECT publication.title FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND keyword.keyword  =  "Information Retrieval";
SELECT COUNT ( DISTINCT author.name ) FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE CAST.role  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
SELECT publication.year ,  SUM ( publication.citation_num ) FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN publication ON publication.pid  =  cite.citing WHERE publication.title  =  "Making database systems usable" GROUP BY publication.year;
SELECT keyword.keyword FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN publication_keyword ON publication.pid  =  publication_keyword.pid JOIN keyword ON publication_keyword.kid  =  keyword.kid WHERE organization.name  =  "University of Michigan";
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" GROUP BY keyword.keyword HAVING COUNT ( DISTINCT publication.title )  >  100;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT author.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE keyword.keyword  =  "Relational Database" GROUP BY author.name HAVING COUNT ( DISTINCT publication.title )  >  10;
SELECT producer.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN made_by ON movie.mid  =  made_by.msid JOIN producer ON producer.pid  =  made_by.pid WHERE actor.name  =  "Kate Winslet"
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT COUNT ( DISTINCT publication.title ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan";
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND conference.name  =  "VLDB" AND publication.year  >  2000;
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.name  =  "Tom Hanks";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND journal.name  =  "PVLDB";
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND publication.citation_num  >  200;
SELECT journal.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT conference.name FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE publication.title  =  "Making database systems usable";
SELECT COUNT ( DISTINCT actor.name  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE movie.title  =  "Saving Private Ryan";
SELECT journal.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY journal.name ORDER BY COUNT (*) DESC LIMIT 1;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND conference.name  =  "VLDB";
SELECT COUNT (DISTINCT author.name) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE keyword.keyword  =  "Relational Database";
SELECT COUNT ( DISTINCT publication.title ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid WHERE keyword.keyword  =  "Natural Language";
SELECT author.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB" AND publication.year  <  2002 AND publication.year  >  1995;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND journal.name  =  "PVLDB" AND publication.year  >  2000;
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND conference.name  =  "VLDB" AND publication.citation_num  >  200;
SELECT publication.title FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan";
SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.COUNTY  =  "santa cruz county" AND RESTAURANT.FOOD_TYPE  =  "jamerican";
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava" AND publication.year  <  2000;
SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Steven Spielberg";
SELECT director.birth_city FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "The Past";
SELECT movie.title FROM classification JOIN genre ON classification.gid  =  genre.gid JOIN movie ON movie.mid  =  classification.msid GROUP BY classification.msid ORDER BY count(*) DESC LIMIT 1
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" ORDER BY publication.citation_num DESC LIMIT 1;
SELECT COUNT ( DISTINCT movie.title  ) FROM tags JOIN keyword ON tags.kid  =  keyword.id JOIN movie ON tags.msid  =  movie.mid WHERE keyword.keyword  =  "Persians" AND movie.release_year  >  1990;
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava" ORDER BY publication.citation_num DESC;
SELECT publication.title FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid WHERE keyword.keyword  =  "Natural Language";
SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid WHERE organization.name  =  "University of Michigan" AND publication.citation_num  >  5000;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND publication.year  >  2000;
SELECT COUNT ( DISTINCT author.name ) FROM writes JOIN author ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Shahab Hosseini";
SELECT movie.title FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Jim Jarmusch" ORDER BY movie.release_year DESC LIMIT 1
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.year  >  2000 ORDER BY publication.citation_num DESC LIMIT 1;
SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Quentin Tarantino" AND movie.release_year  >  2010;
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" ORDER BY publication.citation_num DESC LIMIT 1;
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava" AND publication.citation_num  >  200;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava" AND publication.year  <  2000;
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid WHERE publication.title  =  "Making database systems usable";
SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "french" AND LOCATION.CITY_NAME  =  "palo alto";
SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Quentin Tarantino" AND movie.release_year  <  2010;
SELECT COUNT ( DISTINCT keyword.keyword ) FROM DOMAIN JOIN domain_keyword ON DOMAIN.did  =  domain_keyword.did JOIN keyword ON domain_keyword.kid  =  keyword.kid WHERE DOMAIN.name  =  "Databases";
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.name  =  "Woody Strode" AND actor.name  =  "Jason Robards";
SELECT COUNT ( DISTINCT author.name ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN DOMAIN ON DOMAIN.did  =  publication.domain_id WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Shahab Hosseini";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava";
SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB";
SELECT SUM ( publication.citation_num ) FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.year  <  2005;
SELECT COUNT ( DISTINCT actor.name  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.nationality  =  "Iran" AND CAST.role  =  "actor" AND actor.name  =  "Jim Jarmusch";
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND journal.name  =  "PVLDB" AND publication.year  >  2000;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Gabriele Ferzetti" ORDER BY movie.release_year DESC LIMIT 1
SELECT conference.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY conference.name ORDER BY COUNT (*) DESC LIMIT 1;
SELECT COUNT ( DISTINCT publication.title ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan" AND publication.year  >  2000;
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Shahab Hosseini";
SELECT SUM ( publication.citation_num ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan";
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND publication.year  >  2000 ORDER BY publication.citation_num DESC LIMIT 1;
SELECT author.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE keyword.keyword  =  "Relational Database";
SELECT COUNT ( DISTINCT keyword.keyword ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT movie.title FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Alfred Hitchcock";
SELECT COUNT ( DISTINCT publication.title ) ,  publication.year FROM writes JOIN author ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE author.name  =  "H. V. Jagadish" GROUP BY publication.year;
SELECT SUM ( publication.citation_num ) FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid WHERE keyword.keyword  =  "Natural Language";
SELECT SUM ( publication.citation_num ) FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND publication.year  <  2005;
SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan" AND publication.citation_num  >  5000;
SELECT LOCATION.STREET_NAME ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT journal.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY journal.name HAVING COUNT ( DISTINCT publication.title )  >  10;
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Yunyao Li" AND publication.year  >  2005;
SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid WHERE organization.name  =  "University of Michigan" GROUP BY author.name ORDER BY SUM ( publication.citation_num ) DESC LIMIT 1;
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Humphrey Bogart" AND movie.release_year  <  1942;
SELECT author.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB" AND publication.year  <  2002;
SELECT conference.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY conference.name HAVING COUNT ( DISTINCT publication.title )  >  10;
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN domain_publication ON publication.pid  =  domain_publication.pid JOIN DOMAIN ON DOMAIN.did  =  domain_publication.did JOIN organization ON organization.oid  =  author.oid WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan";
SELECT author.name FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN writes ON writes.pid  =  publication.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND publication.year  >  2000;
