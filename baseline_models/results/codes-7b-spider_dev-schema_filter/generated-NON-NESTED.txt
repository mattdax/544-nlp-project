SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT population FROM city WHERE population  >  150000 AND state_name  =  "wisconsin";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT city_name FROM city WHERE state_name  =  "texas";
SELECT state.population FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas";
SELECT population FROM city WHERE city_name  =  "seattle" AND state_name  =  "washington";
SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  "illinois";
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT COUNT ( city_name ) FROM city
SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.capital  =  "des moines";
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT lowest_point FROM highlow WHERE state_name  =  "iowa";
SELECT COUNT ( river_name ) FROM river WHERE traverse  =  "idaho";
SELECT population FROM city WHERE population  >  150000 AND state_name  =  "wisconsin";
SELECT city_name FROM city WHERE population  >  150000;
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT lowest_point FROM highlow WHERE state_name  =  "iowa";
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;
SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT capital FROM state WHERE state_name  =  "texas";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT state.population FROM state JOIN river ON state.state_name  =  river.traverse WHERE river.river_name  =  "mississippi";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );
SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  "illinois";
SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name IN ( SELECT border FROM border_info WHERE state_name  =  "mississippi" );
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );
SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  "illinois";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT highest_elevation FROM highlow WHERE state_name  =  "delaware";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT COUNT ( city_name ) FROM city
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT city_name FROM city WHERE state_name  =  "texas";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT capital FROM state WHERE state_name  =  "texas";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT highest_elevation FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT city_name FROM city WHERE state_name  =  "texas";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT population FROM city WHERE population  >  150000 AND state_name  =  "wisconsin";
SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT population FROM city WHERE city_name  =  "boulder";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT COUNT ( river_name ) FROM river WHERE traverse  =  "idaho";
SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT city_name FROM city WHERE population  >  150000;
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT state.capital FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT city_name FROM city WHERE state_name  =  "texas";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT highest_point FROM highlow WHERE state_name  =  "texas";
SELECT city_name FROM city WHERE state_name  =  "texas";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT MAX ( highest_elevation ) FROM highlow;
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT COUNT ( river_name ) FROM river WHERE traverse  =  "idaho";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
SELECT population FROM city WHERE city_name  =  "boulder";
SELECT border FROM border_info WHERE state_name  =  "kentucky";
SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  "kansas";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT MAX (highest_elevation) FROM highlow WHERE highest_point  =  "guadalupe peak";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT highest_point FROM highlow WHERE state_name  =  "texas";
SELECT lowest_elevation FROM highlow WHERE state_name  =  "pennsylvania";
SELECT city_name FROM city WHERE state_name  =  "texas";
SELECT lake_name FROM lake WHERE area  >  750 AND state_name  =  "michigan";
SELECT traverse FROM river WHERE river_name  =  "ohio";
SELECT mountain_name FROM mountain WHERE state_name  =  "texas" ORDER BY mountain_altitude DESC LIMIT 1;
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
SELECT population FROM city WHERE city_name  =  "boulder";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT population FROM city WHERE city_name  =  "boulder";
SELECT population FROM city WHERE city_name  =  "boulder";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT state_name FROM city WHERE city_name  =  "springfield";
SELECT river_name FROM river WHERE traverse  =  "illinois";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "TAIL" AND paper.year  =  2015;
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2010 AND venue.venueName  =  "EMNLP" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT state_name FROM mountain WHERE mountain_name  =  "whitney";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT city_name FROM city;
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT state_name FROM state WHERE capital  =  "salem";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT mountain_name FROM mountain WHERE state_name  =  "alaska";
SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sanjeev arora" ORDER BY paper.year DESC;
SELECT state_name FROM state WHERE state_name  =  "massachusetts";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" INTERSECT SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL";
SELECT state_name FROM mountain WHERE mountain_name  =  "whitney";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" AND paper.title  =  "TAIL";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "subhasis chaudhuri";
SELECT DISTINCT paper.journalId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "mohammad rastegari";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "syntactic parsing" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "acl";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT traverse FROM river;
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "subhasis chaudhuri";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "subhasis chaudhuri";
SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "RGB-D Object Dataset" AND keyphrase.keyphraseName  =  "Class consistent multi-modal fusion with binary features" AND paper.year  =  2016 AND venue.venueName  =  "CVPR";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL" AND venue.venueName  =  "NIPS";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT LENGTH FROM river WHERE river_name  =  "colorado" AND traverse  =  "texas";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christopher D. Manning";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" INTERSECT SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL";
SELECT traverse FROM river;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "balakrishnan prabhakaran";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "one shot learning" AND keyphrase.keyphraseName  =  "machine networks";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT COUNT ( city_name ) FROM city WHERE state_name  =  "texas";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );
SELECT traverse FROM river WHERE LENGTH  >  750;
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL" AND venue.venueName  =  "NIPS";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
SELECT COUNT ( city_name ) FROM city WHERE state_name  =  "texas";
SELECT state_name FROM city WHERE city_name  =  "austin" AND population  >  150000;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
SELECT mountain_altitude FROM mountain WHERE state_name  =  "texas" ORDER BY mountain_altitude DESC LIMIT 1
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sharon goldwater";
SELECT DISTINCT paper.journalId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "linda shapiro";
SELECT SUM ( checkin.count ) ,  business.state FROM category JOIN business ON category.business_id  =  business.business_id JOIN category ON category.business_id  =  business.business_id JOIN checkin ON checkin.business_id  =  business.business_id WHERE category.category_name  =  "Italian" AND category.category_name  =  "Delis" AND checkin.day  =  "Sunday" GROUP BY business.state;
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.rating  =  5 AND category.category_name  =  "Italian";
SELECT DISTINCT author.authorName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE dataset.datasetName  =  "ImageNet";
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "Italian" AND neighbourhood.neighbourhood_name  =  "Meadowood";
SELECT review.text FROM review JOIN USER ON review.user_id  =  USER.user_id WHERE USER.name  =  "Niloofar";
SELECT sum(checkin.count) FROM category JOIN business ON category.business_id  =  business.business_id JOIN category ON category.business_id  =  business.business_id JOIN checkin ON checkin.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Moroccan" AND category.category_name  =  "restaurant";
SELECT review.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id WHERE business.review_count  >  100 AND category.category_name  =  "Pet Groomers";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.name  =  "Mesa Grill" AND category.category_name  =  "restaurant";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "EMNLP-CoNLL" ORDER BY COUNT ( DISTINCT paper.paperId ) DESC;
SELECT tip.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.name  =  "Vintner Grill" AND tip.likes  >  9;
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "ACL";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND business.review_count  >=  30 AND business.rating  >  3 AND category.category_name  =  "Bars";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens";
SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "deep learning";
SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE category.category_name  =  "restaurant";
SELECT DISTINCT dataset.datasetId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.state  =  "Pennsylvania" AND category.category_name  =  "restaurant";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Eric C. Kerrigan" AND venue.venueName  =  "Liquid Automatica";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "NLP" ORDER BY paper.year DESC;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "pldi";
SELECT DISTINCT dataset.datasetId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE venue.venueName  =  "ACL";
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.state  =  "Texas" AND business.city  =  "Dallas" AND category.category_name  =  "Valet Service";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Seafood";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Seafood";
SELECT tip.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.city  =  "Pennsylvania" AND business.name  =  "Cafe Zinho" AND business.state  =  "Pennsylvania" AND tip.year  =  2010;
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "ACL" GROUP BY writes.authorId;
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN venue ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paperKeyphrase.paperId  =  paper.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2014 AND venue.venueName  =  "ACL";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT review.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE category.category_name  =  "Italian" AND USER.name  =  "Michelle";
SELECT DISTINCT journal.journalName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN journal ON paper.journalId  =  journal.journalId WHERE author.authorName  =  "linda shapiro";
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "jamie callan";
SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "WebKB";
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT SUM ( checkin.count ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN category ON category.business_id  =  business.business_id JOIN checkin ON checkin.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Moroccan" AND category.category_name  =  "restaurant" AND checkin.day  =  "Friday";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "ACL" GROUP BY writes.authorId;
SELECT neighbourhood.neighbourhood_name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "Italian" AND business.state  =  "WI";
SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id JOIN USER ON USER.user_id  =  tip.user_id WHERE business.name  =  "Barrio Cafe" AND tip.year  =  2015;
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE paper.year  =  2015;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2013;
SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT neighbourhood.neighbourhood_name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.name  =  "Flat Top Grill" AND category.category_name  =  "restaurant";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "ACL";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "ACL" AND paper.numCiting  <  5;
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE dataset.datasetName  =  "YAGO" AND keyphrase.keyphraseName  =  "Semantic Data";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "sensor fusion";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "escape games";
SELECT DISTINCT paper.title FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Eric C. Kerrigan" AND venue.venueName  =  "Liquid Automatica";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "sigir";
SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" AND paper.year  >  2015;
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE category.category_name  =  "Bars" AND USER.name  =  "Patrick";
SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId WHERE paper.year  =  2011 AND MONTH  =  3;
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
SELECT DISTINCT paper.title FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Ranjit Jhala" AND keyphrase.keyphraseName  =  "Liquid Haskell";
SELECT neighbourhood.neighbourhood_name FROM neighbourhood JOIN business ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" GROUP BY neighbourhood.neighbourhood_name ORDER BY count(*) DESC LIMIT 1;
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Seafood";
SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND paper.year  =  2014 AND keyphrase.keyphraseName  =  "Parsing";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Apple Store";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT sum(checkin.count) FROM checkin JOIN business ON checkin.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE neighbourhood.neighbourhood_name  =  "Brighton Heights";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Dallas" AND business.rating  >=  3.5 AND category.category_name  =  "Mexican";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE category.category_name  =  "Bars" AND review.rating  >=  3 AND USER.name  =  "Patrick";
SELECT DISTINCT dataset.datasetId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT review.text FROM review JOIN business ON review.business_id  =  business.business_id WHERE business.rating  =  2.5;
SELECT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.title  =  "Fracture of acrylic bone cement";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR";
SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE paper.year  =  2015;
SELECT USER.name FROM USER JOIN tip ON USER.user_id  =  tip.user_id JOIN business ON tip.business_id  =  business.business_id WHERE business.city  =  "Dallas";
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "Academic radiology" AND paper.year  =  1995;
SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Dallas" AND business.rating  >  3.5 AND category.category_name  =  "Bars";
SELECT tip.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.city  =  "Texas" AND business.name  =  "Cafe Zinho" AND category.category_name  =  "category_category_name0";
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "escape games";
SELECT DISTINCT writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "NIPS";
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName  =  "WebKB";
SELECT checkin.day ,  sum(checkin.count) FROM category JOIN business ON category.business_id  =  business.business_id JOIN checkin ON checkin.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND business.state  =  "CA" AND category.category_name  =  "Moroccan" GROUP BY checkin.day;
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName  =  "WebKB";
SELECT review.text FROM review JOIN USER ON review.user_id  =  USER.user_id WHERE review.rating  >  4 AND USER.name  =  "Patrick";
SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Dallas" AND business.rating  >  3.5 AND category.category_name  =  "Bars";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Dallas" AND business.rating  >  3.5 AND category.category_name  =  "Mexican";
SELECT review.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id WHERE business.name  =  "Kabob Palace" AND review.year  =  2014;
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Richard Ladner" AND venue.venueName  =  "chi";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Stonebraker" AND paper.title  =  "GIS Database";
SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Artificial Intelligence" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
SELECT SUM ( tip.likes ) FROM tip JOIN business ON tip.business_id  =  business.business_id JOIN USER ON USER.user_id  =  tip.user_id WHERE business.name  =  "Cafe Zinho" AND USER.name  =  "Niloofar";
SELECT DISTINCT writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "NIPS";
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Pedro Domingos";
SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.rating  >  2.5 AND category.category_name  =  "restaurant" AND review.year  =  2010;
SELECT DISTINCT keyphrase.keyphraseName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE venue.venueName  =  "uist";
SELECT DISTINCT paper.title FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Donald E Knuth";
SELECT DISTINCT dataset.datasetId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT business.city FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.name  =  "Taj Mahal" AND category.category_name  =  "restaurant";
SELECT DISTINCT paper.paperId ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "ACL";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "ameet soni";
SELECT DISTINCT journal.journalName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN journal ON paper.journalId  =  journal.journalId WHERE keyphrase.keyphraseName  =  "Temporal Data";
SELECT checkin.count FROM checkin JOIN business ON checkin.business_id  =  business.business_id WHERE business.name  =  "Cafe Zinho" AND checkin.day  =  "Friday";
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "character recognition" AND paper.year  <  2010;
SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS";
SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE venue.venueName  =  "NIPS";
SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN journal ON paper.journalId  =  journal.journalId WHERE journal.journalName  =  "Cell" AND paper.year  =  2015;
SELECT DISTINCT journal.journalName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN journal ON paper.journalId  =  journal.journalId WHERE author.authorName  =  "Takashi Matsumoto";
SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.state  =  "Texas" AND category.category_name  =  "Moroccan";
SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens";
SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
SELECT avg(checkin.count),  checkin.day FROM checkin JOIN business ON checkin.business_id  =  business.business_id WHERE business.name  =  "Barrio Cafe" GROUP BY checkin.day;
SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
SELECT movie.title FROM classification JOIN genre ON classification.gid  =  genre.gid JOIN movie ON movie.mid  =  classification.msid WHERE genre.genre  =  "Sci-Fi" AND movie.release_year  =  2010;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON GEOGRAPHIC.CITY_NAME  =  RESTAURANT.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "chinese";
SELECT LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.CITY_NAME  =  "alameda";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.year  >  2000;
SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid JOIN classification ON movie.mid  =  classification.msid JOIN genre ON classification.gid  =  genre.gid WHERE genre.name  =  "nuclear weapons";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT DOMAIN.name FROM DOMAIN_AUTHOR JOIN author ON DOMAIN_AUTHOR.aid  =  author.aid JOIN DOMAIN ON DOMAIN_AUTHOR.did  =  DOMAIN.did WHERE author.name  =  "H. V. Jagadish";
SELECT movie.title FROM written_by JOIN movie ON written_by.msid  =  movie.mid JOIN writer ON written_by.wid  =  writer.wid WHERE writer.name  =  "Matt Damon";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT SUM ( publication.citation_num ) FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB";
SELECT producer.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid JOIN made_by ON movie.mid  =  made_by.msid JOIN producer ON producer.pid  =  made_by.pid GROUP BY producer.name ORDER BY count(*) DESC LIMIT 1
SELECT SUM ( publication.citation_num ) FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND publication.year  =  2005;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT COUNT ( DISTINCT movie.title  ) ,  movie.release_year FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Woody Allen" GROUP BY movie.release_year
SELECT count(*) FROM GEOGRAPHIC JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME  =  RESTAURANT.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "chinese";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava";
SELECT LOCATION.RESTAURANT_ID FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.HOUSE_NUMBER  =  "bethel island rd" AND LOCATION.CITY_NAME  =  "bethel island";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND publication.year  >  2000;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.CITY_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" );
SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine" AND LOCATION.CITY_NAME  =  "san francisco";
SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "James Bond";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN tv_series ON tv_series.sid  =  CAST.msid WHERE actor.name  =  "Olivia Pope" AND tv_series.title  =  "Scandal";
SELECT organization.name FROM domain_author JOIN author ON domain_author.aid  =  author.aid JOIN DOMAIN ON DOMAIN.did  =  domain_author.did JOIN organization ON organization.oid  =  author.oid WHERE DOMAIN.name  =  "Databases";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE CAST.role  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Rowan Atkinson" AND CAST.role  =  "Mr. Bean";
SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "french" AND LOCATION.CITY_NAME  =  "palo alto";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "bethel island" AND LOCATION.STREET_NAME  =  "bethel island rd" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT publication.citation_num FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB";
SELECT CAST.role FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE movie.title  =  "Daddy Long Legs";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.STREET_NAME  =  "bethel island rd" AND LOCATION.CITY_NAME  =  "bethel island";
SELECT SUM ( publication.citation_num ) FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" AND publication.citation_num  >  200 AND publication.year  >  2000;
SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine" AND LOCATION.CITY_NAME  =  "san francisco";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND LOCATION.CITY_NAME  =  "denny";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND conference.name  =  "VLDB";
SELECT movie.title FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Steven Spielberg" AND movie.release_year  >  2006;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.COUNTY  =  "yolo county" AND RESTAURANT.FOOD_TYPE  =  "italian";
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB";
SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN DOMAIN ON DOMAIN.did  =  publication.domain_id WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan";
SELECT LOCATION.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area";
SELECT LOCATION.CITY_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "french" AND GEOGRAPHIC.REGION  =  "bay area";
SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.citation_num  >  200;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT genre.genre FROM genre JOIN classification ON genre.gid  =  classification.gid JOIN movie ON movie.mid  =  classification.msid WHERE movie.title  =  "Jurassic Park";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid WHERE CAST.role  =  "Mr. Bean";
SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "chinese";
SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "James Bond";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
SELECT COUNT (DISTINCT author.name) FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Daffy Duck";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT COUNT ( DISTINCT publication.title ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan" AND publication.year  >  2000;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT movie.title FROM tags JOIN keyword ON tags.kid  =  keyword.id JOIN movie ON tags.msid  =  movie.mid WHERE keyword.keyword  =  "nuclear weapons";
SELECT writer.name FROM written_by JOIN movie ON written_by.msid  =  movie.mid JOIN writer ON written_by.wid  =  writer.wid WHERE movie.title  =  "The Truman Show";
SELECT SUM ( publication.citation_num ) FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.year  =  2005;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM classification JOIN genre ON classification.gid  =  genre.gid JOIN movie ON movie.mid  =  classification.msid WHERE genre.genre  =  "Sci-Fi" AND movie.release_year  =  2010;
SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine" AND LOCATION.CITY_NAME  =  "san francisco";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Robin Wright";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) );
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Robin Wright";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT COUNT ( DISTINCT publication.title ) ,  publication.year FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" GROUP BY publication.year;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.year  <  2000;
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN organization ON organization.oid  =  journal.oid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda";
SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "palo alto" AND RESTAURANT.FOOD_TYPE  =  "french";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT author.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE journal.name  =  "PVLDB" AND publication.year  =  2010;
SELECT tv_series.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN tv_series ON tv_series.sid  =  CAST.msid WHERE actor.name  =  "Scott Foley";
SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN tv_series ON tv_series.sid  =  directed_by.msid WHERE tv_series.title  =  "House of Cards" AND tv_series.release_year  =  2013;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.birth_city  =  "Los Angeles"
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT business.name FROM review JOIN business ON review.business_id  =  business.business_id WHERE review.month  =  "April" GROUP BY review.business_id ORDER BY COUNT (*) DESC LIMIT 1;
SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.NAME  =  "buttercup kitchen";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT director.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE actor.name  =  "Kate Winslet";
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE actor.name  =  "Taraneh Alidoosti" AND director.name  =  "Asghar Farhadi";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "bethel island" AND LOCATION.STREET_NAME  =  "bethel island rd" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.gender  =  "female" AND movie.title  =  "Saving Private Ryan";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.nationality  =  "Canada" AND movie.title  =  "James Bond";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "alameda" AND RESTAURANT.RATING  >  2.5;
SELECT tv_series.title FROM tv_series JOIN made_by ON tv_series.sid  =  made_by.msid JOIN producer ON producer.pid  =  made_by.pid WHERE producer.name  =  "Shonda Rhimes";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
SELECT COUNT ( DISTINCT publication.title ) ,  publication.year FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" GROUP BY publication.year;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT publication.title FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan" AND publication.year  >  2000;
SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "Joy" AND movie.release_year  =  2015;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.RATING  >  2.5 AND RESTAURANT.FOOD_TYPE  =  "arabic" AND LOCATION.STREET_NAME  =  "buchanan";
SELECT SUM ( publication.citation_num ) ,  publication.year FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" GROUP BY publication.year;
SELECT genre.genre FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN genre ON genre.gid  =  directed_by.did JOIN director ON director.did  =  directed_by.did WHERE director.name  =  "Asghar Farhadi";
SELECT publication.title FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND organization.name  =  "University of Michigan";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "arabic" AND LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan";
SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "chinese" AND GEOGRAPHIC.REGION  =  "bay area";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american";
SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN organization ON organization.oid  =  journal.oid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan" AND publication.year  >  2000;
SELECT tv_series.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN tv_series ON tv_series.sid  =  CAST.msid WHERE actor.name  =  "Scott Foley";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT LOCATION.RESTAURANT_ID ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.STREET_NAME  =  "bethel island rd" AND LOCATION.CITY_NAME  =  "bethel island";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE CAST.role  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.STREET_NAME  =  "bethel island rd" AND LOCATION.CITY_NAME  =  "bethel island";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "bethel island" AND LOCATION.STREET_NAME  =  "bethel island rd" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT SUM ( publication.citation_num ) FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE actor.name  =  "Taraneh Alidoosti" AND director.name  =  "Asghar Farhadi";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "bethel island" AND LOCATION.STREET_NAME  =  "bethel island rd" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT movie.title FROM written_by JOIN movie ON written_by.msid  =  movie.mid JOIN writer ON written_by.wid  =  writer.wid WHERE writer.name  =  "Woody Allen" INTERSECT SELECT movie.title FROM made_by JOIN movie ON made_by.msid  =  movie.mid JOIN producer ON made_by.pid  =  producer.pid WHERE producer.name  =  "Woody Allen";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "James Bond";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "french";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "palo alto" AND RESTAURANT.FOOD_TYPE  =  "french";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT author.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE journal.name  =  "PVLDB";
SELECT publication.title FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" AND publication.citation_num  >  200 AND publication.year  >  2000;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" );
SELECT author.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE journal.name  =  "PVLDB" AND publication.year  >  2010;
SELECT author.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB" AND publication.year  =  2002;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "mountain view" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Shahab Hosseini";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT writer.name FROM movie JOIN written_by ON movie.mid  =  written_by.msid JOIN writer ON written_by.wid  =  writer.wid WHERE movie.title  =  "The Truman Show";
SELECT author.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE conference.name  =  "VLDB";
SELECT keyword.keyword FROM DOMAIN JOIN domain_keyword ON DOMAIN.did  =  domain_keyword.did JOIN keyword ON keyword.kid  =  domain_keyword.kid WHERE DOMAIN.name  =  "Databases";
SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE movie.title  =  "Camp X-Ray";
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "french" );
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
SELECT SUM ( publication.citation_num ) ,  publication.year FROM publication JOIN conference ON publication.cid  =  conference.cid WHERE conference.name  =  "VLDB" GROUP BY publication.year;
