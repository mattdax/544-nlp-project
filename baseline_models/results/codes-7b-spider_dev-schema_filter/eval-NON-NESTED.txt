hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.capital  =  "des moines";
hard gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  "des moines" );

hard pred: SELECT state.population FROM state JOIN river ON state.state_name  =  river.traverse WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name IN ( SELECT border FROM border_info WHERE state_name  =  "mississippi" );
hard gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "mississippi" );

hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

extra pred: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
extra gold: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name  =  "mississippi" );

easy pred: SELECT highest_elevation FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
easy gold: SELECT MAX ( highest_elevation ) FROM highlow;

hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

easy pred: SELECT MAX (highest_elevation) FROM highlow WHERE highest_point  =  "guadalupe peak";
easy gold: SELECT highest_elevation FROM highlow WHERE highest_point  =  "guadalupe peak";

easy pred: SELECT mountain_name FROM mountain WHERE state_name  =  "texas" ORDER BY mountain_altitude DESC LIMIT 1;
easy gold: SELECT highest_point FROM highlow WHERE state_name  =  "texas";

hard pred: SELECT state.population FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.river_name  =  "mississippi";
hard gold: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

medium pred: SELECT river_name FROM river WHERE traverse  =  "illinois";
medium gold: SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  "illinois";

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "TAIL" AND paper.year  =  2015;
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sanjeev arora" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "sanjeev arora" ORDER BY t3.year DESC;

easy pred: SELECT state_name FROM state WHERE state_name  =  "massachusetts";
easy gold: SELECT country_name FROM state WHERE state_name  =  "massachusetts";

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" INTERSECT SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" AND paper.title  =  "TAIL";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

hard pred: SELECT DISTINCT paper.journalId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "mohammad rastegari";
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "mohammad rastegari" AND t3.journalid  >=  0;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "acl";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "acl";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2014 AND venue.venueName  =  "ACL";
extra gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "parsing" AND t3.year  =  2014 AND t4.venuename  =  "ACL";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "RGB-D Object Dataset" AND keyphrase.keyphraseName  =  "Class consistent multi-modal fusion with binary features" AND paper.year  =  2016 AND venue.venueName  =  "CVPR";
extra gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "RGB-D Object Dataset" AND t3.title  =  "Class consistent multi-modal fusion with binary features" AND t3.year  =  2016 AND t4.venuename  =  "CVPR";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2014 AND venue.venueName  =  "ACL";
extra gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "parsing" AND t3.year  =  2014 AND t4.venuename  =  "ACL";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "NIPS" INTERSECT SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "TAIL";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "TAIL" AND t4.venuename  =  "NIPS";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

easy pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper
easy gold: SELECT DISTINCT paperid FROM paper WHERE title  =  "machine networks for one shot learning";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

hard pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "balakrishnan prabhakaran";
hard gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "balakrishnan prabhakaran";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

easy pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "one shot learning" AND keyphrase.keyphraseName  =  "machine networks";
easy gold: SELECT DISTINCT paperid FROM paper WHERE title  =  "machine networks for one shot learning";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "chi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi";

hard pred: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );
hard gold: SELECT state_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

extra pred: SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016;

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniella Coelho";
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";

easy pred: SELECT mountain_altitude FROM mountain WHERE state_name  =  "texas" ORDER BY mountain_altitude DESC LIMIT 1
easy gold: SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  "texas";

extra pred: SELECT DISTINCT paper.journalId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "linda shapiro";
extra gold: SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "linda shapiro";

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.rating  =  5 AND category.category_name  =  "Italian";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  "Italian" AND t3.category_name  =  "restaurant";

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE dataset.datasetName  =  "ImageNet";
extra gold: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  "ImageNet" GROUP BY t2.paperid;

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

extra pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "Italian" AND neighbourhood.neighbourhood_name  =  "Meadowood";
extra gold: SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  "Madison" AND t3.category_name  =  "Italian" AND t4.category_name  =  "restaurant" AND t2.neighbourhood_name  =  "Meadowood";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "EMNLP-CoNLL" ORDER BY COUNT ( DISTINCT paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  "EMNLP-CoNLL" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;

medium pred: SELECT tip.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.name  =  "Vintner Grill" AND tip.likes  >  9;
medium gold: SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Vintner Grill" AND t2.likes  >  9;

medium pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND business.review_count  >=  30 AND business.rating  >  3 AND category.category_name  =  "Bars";
medium gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  "Bars";

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens";
extra gold: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens";

extra pred: SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "deep learning";
extra gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT dataset.datasetId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Eric C. Kerrigan" AND venue.venueName  =  "Liquid Automatica";
extra gold: SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  "Eric C. Kerrigan" AND t3.keyphrasename  =  "Liquid" AND t6.venuename  =  "Automatica";

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "NLP" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "NLP" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens";
extra gold: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens";

extra pred: SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
extra gold: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC;

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.state  =  "Texas" AND business.city  =  "Dallas" AND category.category_name  =  "Valet Service";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  "Dallas" AND t1.state  =  "Texas" AND t2.category_name  =  "Valet Service" AND t3.category_name  =  "restaurant";

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Seafood";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "Seafood" AND t3.category_name  =  "restaurant";

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Seafood";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "Seafood" AND t3.category_name  =  "restaurant";

medium pred: SELECT tip.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.city  =  "Pennsylvania" AND business.name  =  "Cafe Zinho" AND business.state  =  "Pennsylvania" AND tip.year  =  2010;
medium gold: SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Cafe Zinho" AND t1.state  =  "Pennsylvania" AND t2.year  =  2010;

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT review.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE category.category_name  =  "Italian" AND USER.name  =  "Michelle";
extra gold: SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  "Italian" AND t3.category_name  =  "category_category_name1" AND t5.name  =  "Michelle";

extra pred: SELECT DISTINCT journal.journalName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN journal ON paper.journalId  =  journal.journalId WHERE author.authorName  =  "linda shapiro";
extra gold: SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "linda shapiro";

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "jamie callan";
extra gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "jamie callan" ORDER BY t3.year;

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

extra pred: SELECT neighbourhood.neighbourhood_name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND category.category_name  =  "Italian" AND business.state  =  "WI";
extra gold: SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  "Madison" AND t3.category_name  =  "Italian" AND t4.category_name  =  "restaurant";

hard pred: SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id JOIN USER ON USER.user_id  =  tip.user_id WHERE business.name  =  "Barrio Cafe" AND tip.year  =  2015;
hard gold: SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  "Barrio Cafe" AND t2.year  =  2015;

medium pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE paper.year  =  2015;
medium gold: SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;

easy pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2013;
easy gold: SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;

extra pred: SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "ACL" AND paper.numCiting  <  5;
extra gold: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;

extra pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE dataset.datasetName  =  "YAGO" AND keyphrase.keyphraseName  =  "Semantic Data";
extra gold: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  "YAGO" AND t4.keyphrasename  =  "Semantic Data";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
hard gold: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade";

extra pred: SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "sensor fusion";
extra gold: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE "sensor fusion";

hard pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";

extra pred: SELECT DISTINCT paper.title FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Eric C. Kerrigan" AND venue.venueName  =  "Liquid Automatica";
extra gold: SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE "Eric C. Kerrigan" AND t3.keyphrasename  =  "Liquid" AND t6.venuename  =  "Automatica";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" AND paper.year  >  2015;
extra gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC;

medium pred: SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId WHERE paper.year  =  2011 AND MONTH  =  3;
medium gold: SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
hard gold: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade";

extra pred: SELECT DISTINCT paper.title FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Ranjit Jhala" AND keyphrase.keyphraseName  =  "Liquid Haskell";
extra gold: SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE "Ranjit Jhala" AND t5.keyphrasename  =  "Liquid Haskell";

extra pred: SELECT neighbourhood.neighbourhood_name FROM neighbourhood JOIN business ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" GROUP BY neighbourhood.neighbourhood_name ORDER BY count(*) DESC LIMIT 1;
extra gold: SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  "Madison" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Seafood";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "Seafood" AND t3.category_name  =  "restaurant";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND paper.year  =  2014 AND keyphrase.keyphraseName  =  "Parsing";
extra gold: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL";

medium pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND category.category_name  =  "Apple Store";
medium gold: SELECT business_id FROM business WHERE city  =  "Los Angeles" AND name  =  "Apple Store";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Dallas" AND business.rating  >=  3.5 AND category.category_name  =  "Mexican";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  "Dallas" AND t1.rating  >  3.5 AND t2.category_name  =  "Mexican" AND t3.category_name  =  "restaurant";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE category.category_name  =  "Bars" AND review.rating  >=  3 AND USER.name  =  "Patrick";
extra gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  "Bars" AND t4.name  =  "Patrick";

extra pred: SELECT DISTINCT dataset.datasetId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

easy pred: SELECT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.title  =  "Fracture of acrylic bone cement";
easy gold: SELECT DISTINCT venueid FROM paper WHERE title  =  "Fracture of acrylic bone cement";

extra pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2007 AND venue.venueName  =  "CVPR";
extra gold: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;

medium pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE paper.year  =  2015;
medium gold: SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "Academic radiology" AND paper.year  =  1995;
medium gold: SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  "Academic radiology" AND t2.year  =  1995;

medium pred: SELECT tip.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.city  =  "Texas" AND business.name  =  "Cafe Zinho" AND category.category_name  =  "category_category_name0";
medium gold: SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Cafe Zinho" AND t1.state  =  "Texas";

extra pred: SELECT checkin.day ,  sum(checkin.count) FROM category JOIN business ON category.business_id  =  business.business_id JOIN checkin ON checkin.business_id  =  business.business_id WHERE business.city  =  "Los Angeles" AND business.state  =  "CA" AND category.category_name  =  "Moroccan" GROUP BY checkin.day;
extra gold: SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "Moroccan" AND t3.category_name  =  "restaurant" GROUP BY t4.day;

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.city  =  "Dallas" AND business.rating  >  3.5 AND category.category_name  =  "Mexican";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  "Dallas" AND t1.rating  >  3.5 AND t2.category_name  =  "Mexican" AND t3.category_name  =  "restaurant";

medium pred: SELECT review.text FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id WHERE business.name  =  "Kabob Palace" AND review.year  =  2014;
medium gold: SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Kabob Palace" AND t2.year  =  2014;

hard pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Stonebraker" AND paper.title  =  "GIS Database";
extra gold: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t5.keyphrasename  =  "GIS Database";

extra pred: SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Pedro Domingos";
extra gold: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Pedro Domingos" GROUP BY t3.year;

extra pred: SELECT USER.name FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.rating  >  2.5 AND category.category_name  =  "restaurant" AND review.year  =  2010;
extra gold: SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  "restaurant" AND t3.year  =  2010;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE venue.venueName  =  "uist";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  "uist";

extra pred: SELECT DISTINCT dataset.datasetId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "ameet soni";
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "ameet soni" GROUP BY t3.year ORDER BY t3.year;

extra pred: SELECT DISTINCT journal.journalName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN journal ON paper.journalId  =  journal.journalId WHERE keyphrase.keyphraseName  =  "Temporal Data";
extra gold: SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Temporal Data" GROUP BY t3.journalid;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS";
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE venue.venueName  =  "NIPS";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS";

hard pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN journal ON paper.journalId  =  journal.journalId WHERE journal.journalName  =  "Cell" AND paper.year  =  2015;
hard gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  "Cell" AND t3.year  =  2015;

extra pred: SELECT DISTINCT journal.journalName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN journal ON paper.journalId  =  journal.journalId WHERE author.authorName  =  "Takashi Matsumoto";
extra gold: SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Takashi Matsumoto" GROUP BY t3.journalid;

hard pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id WHERE business.state  =  "Texas" AND category.category_name  =  "Moroccan";
hard gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  "Texas" AND t2.category_name  =  "Moroccan" AND t3.category_name  =  "restaurant";

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens";
extra gold: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Peter Mertens";

medium pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "pldi" AND paper.year  =  2015;
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";

extra pred: SELECT avg(checkin.count),  checkin.day FROM checkin JOIN business ON checkin.business_id  =  business.business_id WHERE business.name  =  "Barrio Cafe" GROUP BY checkin.day;
extra gold: SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  "Barrio Cafe" AND t2.category_name  =  "restaurant" GROUP BY t3.day;

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing";
extra gold: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";

medium pred: SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON GEOGRAPHIC.CITY_NAME  =  RESTAURANT.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "chinese";
medium gold: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "chinese";

medium pred: SELECT LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.CITY_NAME  =  "alameda";
medium gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "alameda";

extra pred: SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid JOIN classification ON movie.mid  =  classification.msid JOIN genre ON classification.gid  =  genre.gid WHERE genre.name  =  "nuclear weapons";
extra gold: SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  "nuclear weapons";

extra pred: SELECT producer.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid JOIN made_by ON movie.mid  =  made_by.msid JOIN producer ON producer.pid  =  made_by.pid GROUP BY producer.name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT LOCATION.RESTAURANT_ID FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.HOUSE_NUMBER  =  "bethel island rd" AND LOCATION.CITY_NAME  =  "bethel island";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "bethel island" AND t2.street_name  =  "bethel island rd";

extra pred: SELECT LOCATION.CITY_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine" AND LOCATION.CITY_NAME  =  "san francisco";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.name  =  "jamerican cuisine";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area";
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "bay area" );

hard pred: SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN tv_series ON tv_series.sid  =  CAST.msid WHERE actor.name  =  "Olivia Pope" AND tv_series.title  =  "Scandal";
hard gold: SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  "Olivia Pope" AND t2.title  =  "Scandal";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

medium pred: SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine";
medium gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  "jamerican cuisine";

medium pred: SELECT SUM ( publication.citation_num ) FROM publication JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB";
medium gold: SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  "PVLDB";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine" AND LOCATION.CITY_NAME  =  "san francisco";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.name  =  "jamerican cuisine";

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND LOCATION.CITY_NAME  =  "denny";
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.name  =  "denny";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND RESTAURANT.FOOD_TYPE  =  "arabic" AND RESTAURANT.RATING  >  2.5;
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t2.street_name  =  "buchanan" AND t1.food_type  =  "arabic" AND t1.rating  >  2.5;

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

medium pred: SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.COUNTY  =  "yolo county" AND RESTAURANT.FOOD_TYPE  =  "italian";
medium gold: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  "yolo county" AND t1.food_type  =  "italian";

extra pred: SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN DOMAIN ON DOMAIN.did  =  publication.domain_id WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan";
extra gold: SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.name  =  "University of Michigan";

extra pred: SELECT LOCATION.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area";
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "bay area" );

hard pred: SELECT LOCATION.CITY_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "french" AND GEOGRAPHIC.REGION  =  "bay area";
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "french";

medium pred: SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "chinese";
medium gold: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "chinese";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "region0" ) AND t1.rating  >  2.5;

medium pred: SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Daffy Duck";
medium gold: SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  "Daffy Duck";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french";
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.NAME  =  "jamerican cuisine" AND LOCATION.CITY_NAME  =  "san francisco";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.name  =  "jamerican cuisine";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "region0" ) AND t1.rating  >  2.5;

hard pred: SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
hard gold: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  "Alan Turing" AND t3.title  =  "The Imitation Game";

extra pred: SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN organization ON organization.oid  =  journal.oid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan";
extra gold: SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan";

extra pred: SELECT business.name FROM review JOIN business ON review.business_id  =  business.business_id WHERE review.month  =  "April" GROUP BY review.business_id ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  "April" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "region0" ) AND t1.rating  >  2.5;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area";
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "bay area" );

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.RATING  >  2.5;
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "region0" ) AND t1.rating  >  2.5;

extra pred: SELECT LOCATION.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area";
extra gold: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "bay area" );

extra pred: SELECT genre.genre FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN genre ON genre.gid  =  directed_by.did JOIN director ON director.did  =  directed_by.did WHERE director.name  =  "Asghar Farhadi";
extra gold: SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  "Asghar Farhadi";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  LOCATION.STREET_NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "arabic" AND LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t2.street_name  =  "buchanan" AND t1.food_type  =  "arabic" AND t1.rating  >  2.5;

medium pred: SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "chinese" AND GEOGRAPHIC.REGION  =  "bay area";
medium gold: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "chinese";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american";
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT publication.title FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN organization ON organization.oid  =  journal.oid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan" AND publication.year  >  2000;
extra gold: SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan" AND t5.year  >  2000;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.RESTAURANT_ID ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.STREET_NAME  =  "bethel island rd" AND LOCATION.CITY_NAME  =  "bethel island";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "bethel island" AND t2.street_name  =  "bethel island rd";

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT movie.title FROM written_by JOIN movie ON written_by.msid  =  movie.mid JOIN writer ON written_by.wid  =  writer.wid WHERE writer.name  =  "Woody Allen" INTERSECT SELECT movie.title FROM made_by JOIN movie ON made_by.msid  =  movie.mid JOIN producer ON made_by.pid  =  producer.pid WHERE producer.name  =  "Woody Allen";
extra gold: SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  "Woody Allen" AND t4.name  =  "Woody Allen";

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" ) ) AND LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "san francisco" AND LOCATION.STREET_NAME  =  "buchanan" AND RESTAURANT.FOOD_TYPE  =  "arabic";
extra gold: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t2.street_name  =  "buchanan" AND t1.food_type  =  "arabic" AND t1.rating  >  2.5;

hard pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

                     easy                 medium               hard                 extra                all                 
count                100                  109                  136                  212                  557                 
=====================   EXECUTION ACCURACY     =====================
execution            0.960                0.954                0.882                0.887                0.912               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.910                0.606                0.588                0.524                0.625               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.929                0.796                0.824                0.798                0.828               
select(no AGG)       0.949                0.806                0.824                0.803                0.835               
where                0.978                0.935                0.761                0.768                0.836               
where(no OP)         0.978                0.944                0.776                0.783                0.847               
group(no Having)     0.000                0.000                1.000                0.933                0.952               
group                0.000                0.000                1.000                0.933                0.952               
order                0.000                0.000                1.000                0.692                0.647               
and/or               1.000                0.991                0.993                0.967                0.984               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.968                1.000                0.919                0.817                0.905               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.920                0.789                0.824                0.783                0.819               
select(no AGG)       0.940                0.798                0.824                0.788                0.826               
where                0.978                0.927                0.761                0.754                0.828               
where(no OP)         0.978                0.936                0.776                0.768                0.839               
group(no Having)     0.000                0.000                1.000                0.538                0.606               
group                0.000                0.000                1.000                0.538                0.606               
order                0.000                0.000                1.000                0.474                0.524               
and/or               0.990                1.000                1.000                0.990                0.995               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.968                0.991                0.919                0.802                0.896               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.925                0.793                0.824                0.790                0.823               
select(no AGG)       0.945                0.802                0.824                0.795                0.830               
where                0.978                0.931                0.761                0.761                0.832               
where(no OP)         0.978                0.940                0.776                0.775                0.843               
group(no Having)     1.000                1.000                1.000                0.683                0.741               
group                1.000                1.000                1.000                0.683                0.741               
order                1.000                1.000                1.000                0.562                0.579               
and/or               0.995                0.995                0.996                0.978                0.989               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             0.968                0.995                0.919                0.810                0.900               
