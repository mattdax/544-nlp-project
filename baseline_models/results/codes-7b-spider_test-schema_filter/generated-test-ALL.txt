SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'
SELECT count(*) FROM cars_data WHERE Horsepower  >  150
SELECT avg(Age),  min(Age),  max(Age) FROM singer WHERE Country  =  "France"
SELECT avg(Weight),  YEAR FROM cars_data GROUP BY YEAR
SELECT singer.Name,  singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID  =  concert.concert_ID WHERE concert.Theme LIKE "%Hey%"
SELECT DISTINCT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID WHERE singer.Age  >  20
SELECT count(*) FROM cars_data WHERE YEAR  =  1980
SELECT avg(Horsepower) FROM cars_data WHERE YEAR  <  1980
SELECT Airline,  Abbreviation FROM airlines WHERE Country  =  'USA'
SELECT count(*) FROM countries
SELECT avg(Capacity),  max(Capacity) FROM stadium
SELECT count(*) FROM flights JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airlines.Airline  =  'Jetblue Airways'
SELECT count(*),  Country FROM singer GROUP BY Country
SELECT AirportName FROM airports WHERE City  =  'Aberdeen'
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
SELECT FlightNo FROM flights WHERE Airline  =  "United Airlines"
SELECT count(*) FROM airlines WHERE Country  =  'USA'
SELECT count(*) FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE airlines.Airline  =  'United' AND flights.SourceAirport  =  'AHD'
SELECT count(*) FROM singer
SELECT count(*) FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE airlines.Airline  =  'JetBlue Airways'
SELECT count(*) FROM Pets WHERE weight  >  10
SELECT count(*) FROM countries
SELECT count(*) FROM cars_data WHERE Cylinders  >  4
SELECT flights.FlightNo FROM flights JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airlines.Airline  =  'United Airlines'
SELECT PetType,  avg(pet_age),  max(pet_age) FROM Pets GROUP BY PetType
SELECT PetType,  weight FROM Pets ORDER BY pet_age ASC LIMIT 1
SELECT count(*) FROM airlines
SELECT count(DISTINCT PetType) FROM Pets
SELECT Name,  Country,  Age FROM singer ORDER BY Age DESC
SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND YEAR  =  1974
SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND YEAR  =  1974
SELECT count(DISTINCT PetType) FROM Pets
SELECT count(*) FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport WHERE airports.AirportName  =  'APG'
SELECT avg(Weight),  YEAR FROM cars_data GROUP BY YEAR
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY flights.Airline ORDER BY count(*) DESC LIMIT 1
SELECT AirportName FROM airports WHERE AirportCode  =  'AKO'
SELECT count(*) FROM cars_data WHERE Cylinders  >  6
SELECT PetID,  weight FROM Pets WHERE pet_age  >  1
SELECT City,  Country FROM airports WHERE AirportName  =  'Alton'
SELECT LOCATION,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT count(*) FROM singer
SELECT PetType,  avg(weight) FROM Pets GROUP BY PetType
SELECT AirportName FROM airports WHERE AirportCode  =  'AKO'
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY flights.Airline ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM airlines
SELECT Abbreviation FROM airlines WHERE Airline  =  "JetBlue Airways"
SELECT count(*) FROM airports
SELECT Airline,  Abbreviation FROM airlines WHERE Country  =  'USA'
SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
SELECT count(*) FROM airlines WHERE Country  =  'USA'
SELECT Name,  Country,  Age FROM singer ORDER BY Age DESC
SELECT max(Accelerate) FROM cars_data
SELECT DISTINCT Country FROM singer WHERE Age  >  20
SELECT count(*) FROM airports
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000
SELECT PetType,  max(weight) FROM Pets GROUP BY PetType
SELECT Abbreviation FROM airlines WHERE Airline  =  'Jetblue Airways'
SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  4
SELECT count(*) FROM cars_data WHERE Horsepower  >  150
SELECT count(DISTINCT Continent) FROM continents
SELECT AirportName FROM airports WHERE City  =  'Aberdeen'
SELECT airports.City,  airports.Country FROM airports JOIN flights ON airports.AirportCode  =  flights.DestAirport WHERE airports.AirportName  =  'Alton'
SELECT Country,  count(*) FROM singer GROUP BY Country
SELECT AirportCode,  AirportName FROM airports WHERE City  =  'Anthony'
SELECT max(Capacity),  avg(Average) FROM stadium
SELECT count(*) FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport WHERE airports.AirportName  =  "APG"
SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  4
SELECT stadium.Name,  stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID GROUP BY concert.Stadium_ID ORDER BY avg(concert.Attendance) DESC LIMIT 1
SELECT singer.Name,  singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID  =  concert.concert_ID WHERE concert.Theme LIKE "%Hey%"
SELECT PetID,  weight FROM Pets WHERE pet_age  >  1
SELECT LOCATION,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM continents
SELECT max(weight),  PetType FROM Pets GROUP BY PetType
SELECT avg(Horsepower) FROM cars_data WHERE YEAR  <  1980
SELECT count(*) FROM flights
SELECT max(Accelerate),  Cylinders FROM cars_data GROUP BY Cylinders
SELECT count(*) FROM flights
SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'
SELECT airports.Country FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport WHERE flights.Airline  =  "JetBlue Airways"
SELECT count(*) FROM cars_data WHERE Cylinders  >  6
SELECT airports.Country FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport WHERE flights.Airline  =  'Jetblue Airways'
SELECT count(*) FROM cars_data WHERE Cylinders  >  4
SELECT count(*) FROM Pets WHERE weight  >  10
SELECT avg(Age),  min(Age),  max(Age) FROM singer WHERE Country  =  "France"
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
SELECT AirportCode,  AirportName FROM airports WHERE City  =  'Anthony'
SELECT Open_Year,  Num_of_Staff FROM museum WHERE Name  =  "Plaza Museum"
SELECT first_name,  last_name FROM players ORDER BY birth_date
SELECT count(*) FROM visitor WHERE Age  <  30
SELECT sum(tours),  ranking_date FROM rankings GROUP BY ranking_date
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
SELECT first_name,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT count(*) FROM employee
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT first_name,  birth_date FROM players WHERE country_code  =  "USA"
SELECT first_name,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
SELECT Template_Type_Code,  Template_Type_Description FROM Ref_Template_Types
SELECT count(*) FROM teacher
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT min(Number_products),  max(Number_products) FROM shop
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
SELECT City FROM employee WHERE Age  <  30 GROUP BY City HAVING count(*)  >  1
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  =  "AD"
SELECT museum.Museum_ID,  museum.Name FROM museum JOIN visit ON museum.Museum_ID  =  visit.Museum_ID GROUP BY museum.Museum_ID ORDER BY sum(visit.Num_of_Ticket) DESC LIMIT 1
SELECT count(*) FROM Documents
SELECT course_description FROM Courses WHERE course_name  =  "math"
SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
SELECT count(*) FROM Templates
SELECT employee.Name,  employee.Age,  employee.City,  hiring.Start_from,  hiring.Is_full_time,  shop.Name FROM hiring JOIN employee ON hiring.Employee_ID  =  employee.Employee_ID JOIN shop ON hiring.Shop_ID  =  shop.Shop_ID
SELECT count(DISTINCT LOCATION) FROM shop
SELECT count(*) FROM players
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT Name,  LOCATION,  District FROM shop ORDER BY Number_products DESC
SELECT Name,  LOCATION,  District FROM shop ORDER BY Number_products DESC
SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
SELECT Version_Number,  Template_Type_Code FROM Templates ORDER BY Version_Number ASC LIMIT 1
SELECT first_name,  birth_date FROM players WHERE country_code  =  "USA"
SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District"
SELECT first_name,  country_code FROM players ORDER BY birth_date DESC LIMIT 1
SELECT Version_Number,  Template_Type_Code FROM Templates WHERE Version_Number  >  5
SELECT line_1,  line_2 FROM Addresses
SELECT Name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
SELECT Hometown,  count(*) FROM teacher GROUP BY Hometown
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
SELECT count(*),  YEAR FROM matches GROUP BY YEAR
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
SELECT DISTINCT battle.name FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle JOIN death ON death.caused_by_ship_id  =  ship.id WHERE battle.bulgarian_commander  =  "Kaloyan" AND battle.latin_commander  =  "Baldwin I"
SELECT sum(Bonus) FROM evaluation
SELECT count(*) FROM employee
SELECT count(*) FROM Templates WHERE Template_Type_Code  =  "CV"
SELECT count(*) FROM Documents
SELECT Document_ID,  Document_Name,  Document_Description FROM Documents
SELECT Name FROM employee ORDER BY Age ASC
SELECT count(*) FROM Courses
SELECT country_code,  count(*) FROM players GROUP BY country_code
SELECT Documents.Document_Name,  Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Documents.Document_Description LIKE "%w%"
SELECT sum(Bonus) FROM evaluation
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description  =  "Book"
SELECT count(*),  employee.City FROM employee JOIN hiring ON employee.Employee_ID  =  hiring.Employee_ID GROUP BY employee.City
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  =  "AD"
SELECT Template_ID,  Version_Number,  Template_Type_Code FROM Templates
SELECT Hometown,  Age FROM teacher
SELECT count(*),  employee.City FROM employee JOIN hiring ON employee.Employee_ID  =  hiring.Employee_ID GROUP BY employee.City
SELECT count(*) FROM matches
SELECT ranking_date,  sum(tours) FROM rankings GROUP BY ranking_date
SELECT Templates.Version_Number,  Templates.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Templates.Version_Number  >  5
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT count(DISTINCT country_code) FROM players
SELECT Documents.Document_Name,  Documents.Template_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text LIKE "%w%"
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
SELECT Templates.Template_Type_Code,  min(Templates.Version_Number) FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_Type_Code
SELECT * FROM hiring
SELECT line_1,  line_2 FROM Addresses
SELECT count(*) FROM players
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 1
SELECT country_code,  count(*) FROM players GROUP BY country_code
SELECT count(*),  players.hand FROM players JOIN matches ON players.player_id  =  matches.winner_id OR players.player_id  =  matches.loser_id GROUP BY players.hand
SELECT battle.name,  battle.date,  battle.result FROM battle
SELECT count(*) FROM Paragraphs
SELECT count(DISTINCT RESULT) FROM battle
SELECT Document_ID,  Document_Name,  Document_Description FROM Documents
SELECT count(*) FROM Paragraphs
SELECT name,  RESULT FROM battle WHERE bulgarian_commander!= "Boril"
SELECT count(*) FROM Courses
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT count(DISTINCT LOCATION) FROM shop
SELECT first_name,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
SELECT first_name,  last_name FROM players ORDER BY birth_date
SELECT Hometown,  count(*) FROM teacher GROUP BY Hometown
SELECT Name FROM teacher ORDER BY Age ASC
SELECT zip_postcode FROM Addresses WHERE city  =  "Port Chelsea"
SELECT Document_ID,  Template_ID,  Document_Description FROM Documents WHERE Document_Name  =  "Robbin CV"
SELECT count(*) FROM museum WHERE Open_Year  >  2013 OR Open_Year  <  2008
SELECT Name FROM teacher ORDER BY Age ASC
SELECT count(*),  players.hand FROM players JOIN matches ON players.player_id  =  matches.winner_id OR players.player_id  =  matches.loser_id GROUP BY players.hand
SELECT count(DISTINCT loser_name) FROM matches
SELECT count(DISTINCT country_code) FROM players
SELECT count(*) FROM teacher
SELECT Name FROM teacher WHERE Hometown!= "Little Lever Urban District"
SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
SELECT min(Number_products),  max(Number_products) FROM shop
SELECT Templates.Template_ID,  Templates.Version_Number,  Templates.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code
SELECT Hometown,  Age FROM teacher
SELECT name,  tonnage FROM ship ORDER BY name DESC
SELECT avg(Num_of_Ticket),  max(Num_of_Ticket) FROM visit
SELECT count(*),  LOCATION FROM shop GROUP BY LOCATION
SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year  <  2009
SELECT count(*),  YEAR FROM matches GROUP BY YEAR
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM matches
SELECT count(*),  LOCATION FROM shop GROUP BY LOCATION
SELECT visitor.Name,  visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID  =  visit.visitor_ID WHERE visitor.Level_of_membership  >  4 ORDER BY visitor.Age
SELECT count(*) FROM Templates
SELECT Name FROM employee ORDER BY Age ASC
SELECT Template_Type_Code,  Template_Type_Description FROM Ref_Template_Types
SELECT zip_postcode FROM Addresses WHERE city  =  "Port Chelsea"
SELECT min(Share),  max(Share) FROM TV_series
SELECT transcript_date,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT Nationality,  count(*) FROM people GROUP BY Nationality
SELECT Final_Table_Made,  Best_Finish FROM poker_player
SELECT count(*) FROM Cartoon WHERE Written_by  =  "Joseph Kuhr"
SELECT transcript_date,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
SELECT count(*) FROM Transcripts
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT Name FROM country WHERE IndepYear  >  1950
SELECT first_name,  middle_name,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT other_student_details FROM Students ORDER BY last_name DESC
SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
SELECT TV_Channel.Package_Option,  TV_series.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel WHERE TV_Channel.Hight_definition_TV  =  1
SELECT cell_mobile_number FROM Students WHERE first_name  =  "Timmothy" AND last_name  =  "Ward"
SELECT TV_series.Episode,  TV_series.Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT Name FROM people WHERE Nationality!= 'Russia'
SELECT count(*) FROM VOTES WHERE state  =  "NY" OR state  =  "CA"
SELECT section_description FROM Sections WHERE section_name  =  "h";
SELECT section_description FROM Sections WHERE section_name  =  "h"
SELECT contestant_number,  contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
SELECT count(*) FROM Cartoon WHERE Written_by  =  "Joseph Kuhr"
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT SUM (SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'
SELECT count(DISTINCT Language) FROM countrylanguage
SELECT first_name FROM Students WHERE permanent_address_id!= current_address_id
SELECT Title FROM Cartoon ORDER BY Title
SELECT Name,  Birth_Date FROM people ORDER BY Name ASC
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
SELECT count(DISTINCT Language) FROM countrylanguage
SELECT count(*) FROM poker_player
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT max(Share),  min(Share) FROM TV_series
SELECT Pixel_aspect_ratio_PAR,  Country FROM TV_Channel WHERE Language!= "English"
SELECT count(DISTINCT Nationality) FROM people
SELECT avg(Earnings) FROM poker_player
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT first_name,  middle_name,  last_name FROM Students WHERE date_left  =  "9999-12-31"
SELECT Content FROM TV_Channel WHERE series_name  =  "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_series ON Cartoon.id  =  TV_series.id WHERE Cartoon.Directed_by  =  "Ben Jones"
SELECT Final_Table_Made,  Best_Finish FROM poker_player
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Spanish' AND country.Continent  =  'Asia' AND country.LifeExpectancy  =  ( SELECT MIN ( country.LifeExpectancy ) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Spanish' AND country.Continent  =  'Asia' );
SELECT Episode FROM TV_series ORDER BY Rating
SELECT Language,  count(*) FROM TV_Channel GROUP BY Language
SELECT sum(country.SurfaceArea) FROM country JOIN city ON country.Code  =  city.CountryCode WHERE city.District  =  "Caribbean"
SELECT Name FROM people WHERE Nationality!= "Russia"
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT count(*) FROM TV_Channel WHERE Language  =  "English"
SELECT Cartoon.Title FROM Cartoon JOIN TV_series ON Cartoon.id  =  TV_series.id WHERE Cartoon.Directed_by  =  "Ben Jones"
SELECT Country,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1
SELECT count(DISTINCT Content) FROM TV_Channel
SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT Name FROM country WHERE IndepYear  >  1950
SELECT Directed_by,  count(*) FROM Cartoon GROUP BY Directed_by
SELECT count(DISTINCT state) FROM AREA_CODE_STATE
SELECT Weekly_Rank FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
SELECT avg(transcript_date) FROM Transcripts
SELECT avg(Earnings) FROM poker_player
SELECT count(DISTINCT Nationality) FROM people
SELECT Air_Date FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name!= 'Jessie Alloway'
SELECT count(DISTINCT series_name),  count(DISTINCT Content) FROM TV_Channel
SELECT Episode FROM TV_series ORDER BY Rating
SELECT SUM ( city.Population ) FROM city JOIN country ON city.CountryCode  =  country.Code WHERE city.District  =  "Gelderland";
SELECT Directed_by,  count(*) FROM Cartoon GROUP BY Directed_by
SELECT TV_Channel.Package_Option,  TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel WHERE TV_Channel.Hight_definition_TV  =  1
SELECT Title FROM Cartoon ORDER BY Title
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
SELECT Students.first_name FROM Students JOIN Addresses ON Students.permanent_address_id  =  Addresses.address_id EXCEPT SELECT Students.first_name FROM Students JOIN Addresses ON Students.current_address_id  =  Addresses.address_id
SELECT Nationality,  count(*) FROM people GROUP BY Nationality
SELECT population FROM city WHERE District  =  "Gelderland";
SELECT sum(country.SurfaceArea) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Spanish" AND country.Region  =  "Caribbean";
SELECT first_name,  middle_name,  last_name FROM Students WHERE date_left  =  "9999-12-31" ORDER BY date_first_registered ASC LIMIT 1
SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa'
SELECT avg(transcript_date) FROM Transcripts
SELECT COUNT (DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.GovernmentForm  =  'Republic'
SELECT section_name,  section_description FROM SECTIONS
SELECT TV_series.Air_Date FROM TV_series JOIN Cartoon ON TV_series.id  =  Cartoon.Channel WHERE Cartoon.Title  =  "A Love of a Lifetime"
SELECT TV_series.Episode,  TV_series.Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT section_name,  section_description FROM SECTIONS
SELECT max(area_code),  min(area_code) FROM AREA_CODE_STATE
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
SELECT country.Name,  country.Population,  country.LifeExpectancy FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Chinese" AND country.Region  =  "Asia" AND country.SurfaceArea  =  ( SELECT MAX ( country.SurfaceArea ) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Chinese" AND country.Region  =  "Asia" );
SELECT Pixel_aspect_ratio_PAR,  Country FROM TV_Channel WHERE Language!= "English"
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  'Africa'
SELECT Language,  count(*) FROM TV_Channel GROUP BY Language
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
SELECT country.Region,  country.Population FROM country JOIN city ON country.Code  =  city.CountryCode WHERE country.Name  =  "Angola";
SELECT count(*) FROM TV_Channel WHERE Language  =  "English"
SELECT first_name,  last_name FROM Students ORDER BY last_name DESC,  first_name DESC
SELECT COUNT (DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Republican" AND country.GovernmentForm  =  "Republic";
SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa";
SELECT count(*) FROM Transcripts
SELECT vote_id,  phone_number,  state FROM VOTES
SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
SELECT Name,  Birth_Date FROM people ORDER BY Name ASC
SELECT Package_Option FROM TV_Channel WHERE series_name  =  "Sky Radio"
SELECT Content FROM TV_Channel WHERE series_name  =  "Sky Radio"
SELECT cell_mobile_number FROM Students WHERE first_name  =  "Timmothy" AND last_name  =  "Ward";
SELECT count(*),  grade FROM Highschooler GROUP BY grade
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT charge_type,  charge_amount FROM Charges
SELECT count(*) FROM singer
SELECT Name FROM conductor WHERE Nationality!= "USA"
SELECT role_code,  street,  city,  state FROM Professionals WHERE city LIKE '%West%'
SELECT Name FROM conductor EXCEPT SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID WHERE orchestra.Nationality  =  "USA"
SELECT count(*) FROM Highschooler
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT charge_type,  charge_amount FROM Charges
SELECT date_arrived,  date_departed FROM Dogs
SELECT first_name,  last_name,  email_address FROM Owners WHERE state LIKE '%North%'
SELECT name FROM Highschooler WHERE grade  =  10
SELECT role_code,  street,  city,  state FROM Professionals WHERE city LIKE '%West%'
SELECT date_arrived,  date_departed FROM Dogs
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT DISTINCT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
SELECT avg(Attendance) FROM show
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM conductor ORDER BY Age
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY sum(orchestra.Year_of_Founded) DESC LIMIT 1
SELECT max(Net_Worth_Millions),  Citizenship FROM singer GROUP BY Citizenship
SELECT name FROM Highschooler WHERE grade  =  10
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT avg(Attendance) FROM show
SELECT ID FROM Highschooler WHERE name  =  "Kyle"
SELECT name,  age,  weight FROM Dogs WHERE abandoned_yn  =  1
SELECT count(DISTINCT Nationality) FROM conductor
SELECT email_address FROM Professionals WHERE state  =  "Hawaii" OR state  =  "Wisconsin"
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Europe' AND country.Population  =  80000;
SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
SELECT first_name,  last_name,  email_address FROM Owners WHERE state LIKE '%North%'
SELECT Name,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT grade FROM Highschooler
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
SELECT name,  grade FROM Highschooler
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT email_address,  cell_number,  home_phone FROM Professionals
SELECT student_id,  count(*) FROM Likes GROUP BY student_id
SELECT age FROM Dogs ORDER BY age DESC LIMIT 1
SELECT email_address FROM Professionals WHERE state  =  "Hawaii" OR state  =  "Wisconsin"
SELECT count(*) FROM conductor
SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
SELECT DISTINCT grade FROM Highschooler
SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
SELECT ID FROM Highschooler WHERE name  =  "Kyle";
SELECT grade FROM Highschooler WHERE name  =  "Kyle";
SELECT student_id,  count(*) FROM Likes GROUP BY student_id
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
SELECT Dogs.name,  Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id WHERE Dogs.breed_code  =  (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1)
SELECT Name FROM singer WHERE Citizenship!= "France"
SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
SELECT COUNT (DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Asia';
SELECT COUNT (DISTINCT country.Name) FROM country JOIN city ON country.Code  =  city.CountryCode WHERE country.Continent  =  'Asia';
SELECT Name FROM singer WHERE Citizenship!= "France"
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT count(*),  grade FROM Highschooler GROUP BY grade
SELECT age FROM Dogs ORDER BY age DESC LIMIT 1
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY count(*) ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT count(*) FROM Highschooler
SELECT name,  grade FROM Highschooler
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY count(*) DESC
SELECT name,  age,  weight FROM Dogs WHERE abandoned_yn  =  1
SELECT email_address,  cell_number,  home_phone FROM Professionals
SELECT count(*) FROM singer
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT Citizenship,  count(*) FROM singer GROUP BY Citizenship
SELECT Birth_Year,  Citizenship FROM singer
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Europe' AND country.Population  =  80000;
SELECT sum(Population),  avg(SurfaceArea) FROM country WHERE Continent  =  'North America' AND SurfaceArea  >  3000;
SELECT avg(age) FROM Dogs
SELECT count(*) FROM conductor
SELECT country.Population,  country.Name,  country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
SELECT avg(age) FROM Dogs
SELECT Birth_Year,  Citizenship FROM singer
SELECT Name FROM conductor ORDER BY Age ASC
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1
SELECT count(DISTINCT Nationality) FROM conductor
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT count(*) FROM Other_Available_Features
SELECT max(Share),  min(Share) FROM performance WHERE TYPE!= "Live final"
SELECT country.Name FROM country JOIN city ON country.Code  =  city.CountryCode GROUP BY country.Name ORDER BY count(*) ASC LIMIT 3
SELECT grade FROM Highschooler WHERE name  =  "Kyle"
SELECT DISTINCT Student.Fname,  Student.Age FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID
SELECT count(*) FROM airports JOIN flights ON airports.AirportCode  =  flights.DestAirport OR airports.AirportCode  =  flights.SourceAirport WHERE airports.City  =  "Aberdeen" OR airports.City  =  "Abilene"
SELECT DISTINCT car_makers.FullName,  model_list.Model FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker
SELECT car_makers.FullName FROM car_makers JOIN cars_data ON car_makers.Id  =  cars_data.Id WHERE cars_data.Year  =  1970
SELECT count(*),  car_makers.Id,  car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id
SELECT FlightNo FROM flights WHERE DestAirport  =  (SELECT AirportCode FROM airports WHERE City  =  'Aberdeen')
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode JOIN airports ON flights.SourceAirport  =  airports.AirportCode WHERE airports.City  =  'Aberdeen' AND airports.City  =  'Ashley'
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY airlines.Airline HAVING count(*)  <  200
SELECT count(*) FROM flights JOIN airlines ON flights.Airline  =  airlines.Airline JOIN airports ON flights.DestAirport  =  airports.AirportCode WHERE airports.City  =  'Aberdeen' AND airlines.Airline  =  'United Airlines'
SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE car_names.Model  =  "amc hornet sportabout" AND car_names.Make  =  "sw";
SELECT count(*) FROM airports JOIN flights ON airports.AirportCode  =  flights.DestAirport WHERE airports.City  =  'Aberdeen' OR airports.City  =  'Abilene'
SELECT Student.Fname,  Student.Age FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID
SELECT count(*) FROM flights WHERE DestAirport  =  "ATO"
SELECT continents.ContId,  continents.Continent,  count(*) FROM continents JOIN countries ON continents.ContId  =  countries.Continent GROUP BY continents.ContId
SELECT count(*) FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Dog" AND Student.Sex  =  "F"
SELECT FlightNo FROM flights WHERE SourceAirport  =  (SELECT AirportCode FROM airports WHERE AirportName  =  "APG")
SELECT count(*) FROM model_list JOIN car_makers ON model_list.Maker  =  car_makers.Id WHERE car_makers.Country  =  "United States";
SELECT continents.Continent,  count(*) FROM car_makers JOIN countries ON car_makers.Country  =  countries.CountryId JOIN continents ON countries.Continent  =  continents.ContId GROUP BY countries.Continent
SELECT count(*),  Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID GROUP BY Has_Pet.StuID
SELECT singer.Name,  count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID GROUP BY singer.Singer_ID
SELECT countries.CountryName,  countries.CountryId FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country GROUP BY countries.CountryId HAVING count(*)  >=  1
SELECT count(*) FROM cars_data WHERE YEAR  =  1980
SELECT continents.ContId,  continents.Continent,  count(*) FROM continents JOIN countries ON continents.ContId  =  countries.Continent GROUP BY continents.ContId
SELECT singer.Name,  count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID GROUP BY singer.Name
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode WHERE airports.City  =  'Aberdeen'
SELECT count(*) FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE airlines.Airline  =  'United Airlines' AND flights.DestAirport  =  'AHD'
SELECT count(*) FROM flights WHERE DestAirport  =  "ATO"
SELECT count(*) FROM car_makers WHERE Country  =  "france"
SELECT continents.Continent,  count(*) FROM continents JOIN countries ON continents.ContId  =  countries.Continent JOIN car_makers ON countries.CountryId  =  car_makers.Country GROUP BY continents.Continent
SELECT PetType,  avg(weight) FROM Pets GROUP BY PetType
SELECT concert.concert_Name,  concert.Theme,  count(*) FROM concert JOIN singer_in_concert ON concert.concert_ID  =  singer_in_concert.concert_ID GROUP BY concert.concert_ID
SELECT max(Horsepower),  car_names.Make FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Cylinders  =  3
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode  =  flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.ModelId  =  cars_data.Id WHERE cars_data.Year  >  1980
SELECT PetType,  avg(pet_age),  max(pet_age) FROM Pets GROUP BY PetType
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport  =  airports.AirportCode WHERE airports.City  =  "Aberdeen"
SELECT FlightNo FROM flights WHERE DestAirport  =  "APG"
SELECT count(*) FROM flights JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airlines.Airline  =  'United Airlines' AND flights.DestAirport  =  'ASY'
SELECT airlines.Airline FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airports.AirportName  =  'AHD'
SELECT stadium.Name,  count(*) FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID GROUP BY stadium.Stadium_ID
SELECT airlines.Airline FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airports.AirportName  =  'AHD'
SELECT concert.concert_Name,  concert.Theme,  count(*) FROM concert JOIN singer_in_concert ON concert.concert_ID  =  singer_in_concert.concert_ID GROUP BY concert.concert_ID
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId ORDER BY cars_data.Horsepower ASC LIMIT 1
SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE car_names.Make  =  "amc hornet sportabout" AND car_names.Model  =  "sw";
SELECT count(*) FROM car_makers WHERE Country  =  "France"
SELECT airlines.Airline FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airports.AirportName  =  'AHD'
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1
SELECT car_makers.FullName,  model_list.Model FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker
SELECT FlightNo FROM flights WHERE DestAirport  =  (SELECT AirportCode FROM airports WHERE City  =  'Aberdeen')
SELECT DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId  =  cars_data.Id WHERE cars_data.Year  >  1980
SELECT count(*),  car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.FullName
SELECT FlightNo FROM flights WHERE DestAirport  =  "APG"
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  "AHD"
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode WHERE airports.City  =  "Aberdeen"
SELECT stadium.Name,  count(*) FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID GROUP BY stadium.Stadium_ID
SELECT count(*) FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport WHERE airports.City  =  "Aberdeen"
SELECT count(*) FROM flights JOIN airports ON flights.SourceAirport  =  airports.AirportCode WHERE airports.City  =  'Aberdeen'
SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId  =  cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1
SELECT avg(Edispl) FROM cars_data WHERE MakeId  =  (SELECT MakeId FROM car_names WHERE Model  =  "volvo")
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode WHERE airports.City  =  'Aberdeen' AND airlines.Airline  =  'United Airlines'
SELECT singer.Name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID  =  concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID  =  singer.Singer_ID WHERE concert.Year  =  2014
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode  =  flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1
SELECT singer.Name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID  =  concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID  =  singer.Singer_ID WHERE concert.Year  =  2014
SELECT car_makers.FullName,  count(*),  car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id
SELECT car_makers.FullName,  car_makers.Id,  count(*) FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id
SELECT FlightNo FROM flights WHERE SourceAirport  =  (SELECT AirportCode FROM airports WHERE AirportName  =  "APG")
SELECT DISTINCT car_makers.FullName FROM car_makers JOIN cars_data ON car_makers.Id  =  cars_data.Id WHERE cars_data.Year  =  1970
SELECT stadium.Name,  stadium.Capacity FROM concert JOIN stadium ON concert.Stadium_ID  =  stadium.Stadium_ID WHERE concert.Year  >=  2014 GROUP BY concert.Stadium_ID ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM flights JOIN airlines ON flights.Airline  =  airlines.Airline WHERE airlines.Airline  =  'United' AND flights.DestAirport  =  'ASY'
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport  =  airports.AirportCode WHERE airports.City  =  "Aberdeen"
SELECT count(*) FROM flights WHERE SourceAirport  =  "ABQ" AND DestAirport  =  "ASL"
SELECT course_description FROM Courses WHERE course_name  =  "math"
SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "Australian Open" ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT sum(Total_spent) FROM visit JOIN visitor ON visit.visitor_ID  =  visitor.ID WHERE visitor.Level_of_membership  =  1
SELECT players.first_name,  players.country_code FROM players JOIN rankings ON players.player_id  =  rankings.player_id ORDER BY rankings.tours DESC LIMIT 1
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description  =  "Book"
SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Documents.Document_Name  =  "Customer reviews"
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Documents.Document_Name  =  "Data base"
SELECT winner_name,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT Paragraphs.Paragraph_ID,  Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID WHERE Documents.Document_Name  =  "Welcome to NY"
SELECT Paragraphs.Other_Details FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Paragraphs.Paragraph_Text LIKE "%Korea%"
SELECT Templates.Template_ID,  count(*) FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_ID
SELECT teacher.Name,  course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID
SELECT count(*) FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE players.hand  =  "L" AND matches.tourney_name  =  "WTA Championships"
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description  =  "Presentation"
SELECT teacher.Name,  course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID ORDER BY teacher.Name ASC
SELECT players.first_name,  sum(rankings.ranking_points) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.first_name
SELECT Documents.Document_Name FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Templates.Template_Type_Code  =  "BK"
SELECT Templates.Template_ID,  count(*) FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_ID
SELECT Document_ID,  Template_ID,  Document_Description FROM Documents WHERE Document_Name  =  "Robbin CV"
SELECT DISTINCT Templates.Template_Details FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code
SELECT players.first_name,  avg(rankings.ranking) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.first_name
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Documents.Document_Name  =  "Data base"
SELECT Ref_Template_Types.Template_Type_Code,  count(*) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code
SELECT max(killed),  min(killed),  caused_by_ship_id FROM death GROUP BY caused_by_ship_id
SELECT Ref_Template_Types.Template_Type_Code,  count(*) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code
SELECT count(DISTINCT Template_ID) FROM Documents
SELECT count(DISTINCT loser_name) FROM matches
SELECT death.note FROM death JOIN ship ON death.caused_by_ship_id  =  ship.id WHERE ship.location LIKE '%East%'
SELECT Ref_Template_Types.Template_Type_Code,  count(*) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code
SELECT teacher.Name FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID WHERE course.Course  =  "math"
SELECT Documents.Document_ID,  Documents.Document_Name,  count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID GROUP BY Documents.Document_ID
SELECT teacher.Name,  course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID
SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Documents.Document_Name  =  "Customer reviews"
SELECT Document_ID,  count(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  "PP" OR Template_Type_Code  =  "PPT"
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description  =  "PP" OR Ref_Template_Types.Template_Type_Description  =  "PPT"
SELECT teacher.Name,  count(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID GROUP BY teacher.Name
SELECT Paragraphs.Other_Details FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Paragraphs.Paragraph_Text LIKE "%Korea%"
SELECT players.first_name,  avg(rankings.ranking) FROM rankings JOIN players ON rankings.player_id  =  players.player_id GROUP BY players.first_name
SELECT Paragraphs.Paragraph_ID,  Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Documents.Document_Name  =  "Welcome to NY"
SELECT teacher.Name FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID WHERE course.Course  =  "math"
SELECT death.injured,  death.killed FROM death JOIN ship ON death.caused_by_ship_id  =  ship.id WHERE ship.tonnage  =  't'
SELECT Ref_Template_Types.Template_Type_Code,  count(*) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code
SELECT shop.Name,  count(*) FROM hiring JOIN employee ON hiring.Employee_ID  =  employee.Employee_ID JOIN shop ON hiring.Shop_ID  =  shop.Shop_ID GROUP BY hiring.Shop_ID
SELECT teacher.Name,  count(*) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID GROUP BY teacher.Name
SELECT count(*) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description  =  "CV"
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code  =  Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description  =  "Presentation"
SELECT Documents.Document_ID,  Documents.Document_Name,  count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID GROUP BY Documents.Document_ID
SELECT Document_ID,  count(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT teacher.Name,  course.Course FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID ORDER BY teacher.Name
SELECT shop.Name,  count(*) FROM shop JOIN hiring ON shop.Shop_ID  =  hiring.Shop_ID GROUP BY shop.Shop_ID
SELECT players.first_name,  sum(rankings.ranking_points) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.first_name
SELECT country.Region FROM country JOIN city ON country.Code  =  city.CountryCode WHERE city.Name  =  "Kabul";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Title  =  "The Rise of the Blue Beetle"
SELECT Cartoon.Title,  Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date
SELECT Students.first_name,  Students.middle_name,  Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id  =  Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name  =  "Bachelors"
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID ORDER BY poker_player.Final_Table_Made ASC
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Title  =  "The Rise of the Blue Beetle!";
SELECT people.Name FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID
SELECT DISTINCT state,  created FROM VOTES
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "English" OR countrylanguage.Language  =  "Dutch"
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID ORDER BY poker_player.Earnings DESC
SELECT Cartoon.Title,  Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date
SELECT created FROM VOTES WHERE state  =  "CA" ORDER BY created DESC LIMIT 1
SELECT country.Region,  country.Population FROM country JOIN city ON country.Code  =  city.CountryCode WHERE country.Name  =  "Angola";
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID WHERE poker_player.Earnings  >  300000
SELECT Production_code,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID ORDER BY poker_player.Earnings DESC
SELECT country.Region FROM country JOIN city ON country.Code  =  city.CountryCode WHERE city.Name  =  "Kabul";
SELECT TV_Channel.Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel WHERE TV_series.series_name  =  "Sky Radio"
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel  =  TV_Channel.id WHERE TV_Channel.series_name  =  "Sky Radio"
SELECT Continent FROM country WHERE Name  =  "Anguilla";
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Name  =  "Aruba" AND countrylanguage.IsOfficial  =  1;
SELECT Students.first_name,  Students.middle_name,  Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id  =  Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name  =  "Bachelor"
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID ORDER BY poker_player.Final_Table_Made ASC
SELECT TV_series.Series_name FROM TV_series JOIN Cartoon ON TV_series.id  =  Cartoon.Channel WHERE Cartoon.Title  =  "A Love of a Lifetime"
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel  =  TV_Channel.id WHERE TV_Channel.series_name  =  "Sky Radio"
SELECT people.Name FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID
SELECT count(*) FROM poker_player
SELECT Weekly_Rank FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
SELECT Population,  LifeExpectancy FROM country WHERE Name  =  "Brazil";
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id  =  Student_Enrolment_Courses.course_id
SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel WHERE TV_Channel.series_name  =  "Sky Radio"
SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID WHERE poker_player.Earnings  >  300000
SELECT DISTINCT Addresses.line_1 ,  Addresses.line_2 ,  Addresses.line_3 ,  Addresses.city ,  Addresses.state_province_county ,  Addresses.zip_postcode FROM Addresses JOIN Students ON Addresses.address_id  =  Students.permanent_address_id UNION SELECT DISTINCT Addresses.line_1 ,  Addresses.line_2 ,  Addresses.line_3 ,  Addresses.city ,  Addresses.state_province_county ,  Addresses.zip_postcode FROM Addresses JOIN Students ON Addresses.address_id  =  Students.current_address_id
SELECT LifeExpectancy,  Population FROM country WHERE Name  =  "Brazil";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel WHERE TV_series.Episode  =  "A Love of a Lifetime"
SELECT DISTINCT breed_name,  size_description FROM Breeds JOIN Sizes ON Breeds.breed_code  =  Sizes.size_code
SELECT conductor.Name,  orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID
SELECT singer.Name,  sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Name
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE song.Sales  >  300000
SELECT Professionals.first_name,  Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code  =  Treatment_Types.treatment_type_code
SELECT Dogs.date_arrived,  Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id
SELECT song.Title,  singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID
SELECT Owners.first_name,  Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id WHERE Owners.state  =  "Virginia"
SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.friend_id  =  Highschooler.ID WHERE Friend.student_id  =  (SELECT ID FROM Highschooler WHERE name  =  'Kyle')
SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Spanish' AND countrylanguage.Percentage  =  ( SELECT MAX ( Percentage ) FROM countrylanguage WHERE Language  =  'Spanish' );
SELECT Treatment_Types.treatment_type_description,  Treatments.cost_of_treatment FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code  =  Treatment_Types.treatment_type_code
SELECT Highschooler.name,  count(*) FROM Likes JOIN Highschooler ON Likes.student_id  =  Highschooler.ID GROUP BY Likes.student_id
SELECT DISTINCT Professionals.first_name,  Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code  =  Treatment_Types.treatment_type_code JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id
SELECT DISTINCT breed_code ,  size_code FROM Dogs
SELECT Highschooler.name,  count(*) FROM Friend JOIN Highschooler ON Friend.student_id  =  Highschooler.ID GROUP BY Friend.student_id
SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.friend_id  =  Highschooler.ID WHERE Friend.student_id  =  (SELECT ID FROM Highschooler WHERE name  =  'Kyle')
SELECT Citizenship,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT count(DISTINCT dog_id) FROM Treatments
SELECT Highschooler.name,  count(*) FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id
SELECT count(*),  singer.Citizenship FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Citizenship
SELECT avg(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id
SELECT Owners.first_name,  Owners.last_name,  Sizes.size_description FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id JOIN Sizes ON Dogs.size_code  =  Sizes.size_code
SELECT Treatments.date_of_treatment,  Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id
SELECT conductor.Name,  orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID
SELECT Treatments.cost_of_treatment,  Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code  =  Treatment_Types.treatment_type_code
SELECT student_id,  count(*) FROM Friend GROUP BY student_id
SELECT DISTINCT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE country.Continent  =  'Asia' AND countrylanguage.Language  =  'Chinese' AND countrylanguage.IsOfficial  =  1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID WHERE orchestra.Year_of_Founded  >  2008
SELECT singer.Name,  sum(song.Sales) FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Singer_ID
SELECT Owners.first_name,  Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE song.Sales  >  300000
SELECT Owners.first_name,  Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id WHERE Owners.state  =  "Virginia"
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID WHERE orchestra.Year_of_Founded  >  2008
SELECT Record_Company,  count(*) FROM orchestra GROUP BY Record_Company
SELECT song.Title,  singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID
SELECT Highschooler.name,  count(*) FROM Likes JOIN Highschooler ON Likes.liked_id  =  Highschooler.ID GROUP BY Likes.student_id
SELECT Dogs.date_arrived,  Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id
SELECT count(*),  student_id FROM Friend GROUP BY student_id
SELECT Ref_Property_Types.property_type_description FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code  =  Ref_Property_Types.property_type_code
SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Citizenship ORDER BY count(*) DESC LIMIT 1
SELECT Owners.first_name,  Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id
SELECT Treatments.date_of_treatment,  Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id  =  Professionals.professional_id
SELECT Owners.first_name,  Owners.last_name,  Sizes.size_description FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id JOIN Sizes ON Dogs.size_code  =  Sizes.size_code
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY airlines.Airline HAVING count(*)  >=  10
SELECT singer.Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID WHERE singer.Age  >  (SELECT avg(Age) FROM singer)
SELECT CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport OR airports.AirportCode  =  flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) LIMIT 1
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId  =  car_names.MakeId GROUP BY car_names.MakeId ORDER BY count(*) DESC LIMIT 1
SELECT airlines.Abbreviation,  airlines.Country FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY flights.Airline ORDER BY count(*) LIMIT 1
SELECT car_makers.FullName,  car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id HAVING count(*)  >  3
SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker WHERE car_makers.FullName  =  "General Motors" OR cars_data.Weight  >  3500
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  'Dog' EXCEPT SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  'Cat'
SELECT stadium.Name,  stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID GROUP BY concert.Stadium_ID ORDER BY avg(concert.Attendance) DESC LIMIT 1
SELECT car_makers.Maker,  cars_data.Year FROM car_makers JOIN cars_data ON car_makers.Id  =  cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Cylinders  =  4 ORDER BY cars_data.Horsepower DESC LIMIT 1
SELECT weight FROM Pets WHERE pet_age  =  (SELECT min(pet_age) FROM Pets)
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat" AND pet_age  =  3
SELECT StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat"
SELECT count(*) FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID WHERE Student.Age  >  20
SELECT count(*) FROM concert WHERE Stadium_ID  =  (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT stadium.Name,  stadium.Location FROM concert JOIN stadium ON concert.Stadium_ID  =  stadium.Stadium_ID WHERE concert.Year  =  2014 INTERSECT SELECT stadium.Name,  stadium.Location FROM concert JOIN stadium ON concert.Stadium_ID  =  stadium.Stadium_ID WHERE concert.Year  =  2015
SELECT PetType,  weight FROM Pets ORDER BY pet_age ASC LIMIT 1
SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId JOIN model_list ON car_names.MakeId  =  model_list.ModelId WHERE cars_data.Weight  <  3500 EXCEPT SELECT DISTINCT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId JOIN model_list ON car_names.MakeId  =  model_list.ModelId JOIN car_makers ON model_list.Maker  =  car_makers.Id WHERE car_makers.FullName  =  "Ford Motor Company"
SELECT count(*) FROM model_list JOIN car_makers ON model_list.Maker  =  car_makers.Id WHERE car_makers.FullName  =  "American Motor Company"
SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year  <  1980
SELECT weight FROM Pets ORDER BY pet_age ASC LIMIT 1
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Cylinders  =  4 ORDER BY cars_data.Horsepower DESC LIMIT 1
SELECT DISTINCT Year FROM cars_data WHERE Weight  <  4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight  >  3000
SELECT Song_Name,  Song_release_year FROM singer ORDER BY Age ASC LIMIT 1
SELECT Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID WHERE concert.Year  =  2014
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  "Cat" INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  "Dog"
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  'APG' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  'CVO'
SELECT car_makers.Id,  car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id HAVING count(*)  >=  2 INTERSECT SELECT car_makers.Id,  car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id  =  car_names.MakeId GROUP BY car_makers.Id HAVING count(*)  >  3
SELECT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID WHERE singer.Age  >  40 INTERSECT SELECT singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID WHERE singer.Age  <  30
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE car_names.Model  =  "volvo" ORDER BY cars_data.Accelerate ASC LIMIT 1
SELECT car_makers.FullName,  car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id HAVING count(*)  >  3
SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country  =  countries.CountryId GROUP BY countries.CountryName ORDER BY count(*) DESC LIMIT 1
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country WHERE countries.Continent  =  'Europe' GROUP BY countries.CountryName HAVING count(*)  >=  3
SELECT singer.Song_Name FROM singer JOIN singer_in_concert ON singer.Singer_ID  =  singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID  =  concert.concert_ID WHERE singer.Age  >  (SELECT avg(Age) FROM singer)
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  "cat" OR Pets.PetType  =  "dog"
SELECT DISTINCT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId JOIN model_list ON car_names.MakeId  =  model_list.ModelId WHERE cars_data.Weight  <  3500 EXCEPT SELECT DISTINCT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId JOIN model_list ON car_names.MakeId  =  model_list.ModelId JOIN car_makers ON model_list.Maker  =  car_makers.Id WHERE car_makers.FullName  =  "Ford Motor Company"
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode  =  flights.DestAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT max(Horsepower) FROM cars_data)
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  "CVO" EXCEPT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  "APG"
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId ORDER BY cars_data.Horsepower ASC LIMIT 1
SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country  =  countries.CountryId WHERE countries.Continent  =  "Europe" GROUP BY countries.CountryName HAVING count(*)  >=  3
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  "Cat" OR Pets.PetType  =  "Dog"
SELECT car_names.Make,  cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId  =  car_names.MakeId GROUP BY car_names.Model ORDER BY count(*) DESC LIMIT 1
SELECT Student.Fname,  Student.Sex FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID GROUP BY Has_Pet.StuID HAVING count(*)  >  1
SELECT Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID WHERE concert.Year  =  2014
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  "APG" INTERSECT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  "CVO"
SELECT avg(Edispl) FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE car_names.Model  =  "volvo"
SELECT Student.StuID,  count(*) FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID GROUP BY Student.StuID
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat" AND pet_age  =  3
SELECT countries.CountryName,  count(*) FROM car_makers JOIN countries ON car_makers.Country  =  countries.CountryId GROUP BY countries.CountryName HAVING count(*)  >  2
SELECT airlines.Abbreviation,  airlines.Country FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY flights.Airline ORDER BY count(*) LIMIT 1
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country
SELECT car_names.MakeId,  car_names.Make FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Cylinders  <  4 EXCEPT SELECT car_names.MakeId,  car_names.Make FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Horsepower  =  (SELECT min(Horsepower) FROM cars_data)
SELECT Student.Fname,  Student.Age FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Dog" EXCEPT SELECT Student.Fname,  Student.Age FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat"
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY airlines.Airline HAVING count(*)  >=  10
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country  =  countries.CountryId GROUP BY car_makers.Country HAVING count(*)  >  2
SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM model_list JOIN car_makers ON model_list.Maker  =  car_makers.Id WHERE car_makers.FullName  =  "American Motor Company"
SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) LIMIT 1
SELECT car_names.MakeId,  car_names.Make FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Horsepower  >  (SELECT min(Horsepower) FROM cars_data) EXCEPT SELECT car_names.MakeId,  car_names.Make FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Cylinders  >  3
SELECT stadium.Name,  stadium.Capacity FROM concert JOIN stadium ON concert.Stadium_ID  =  stadium.Stadium_ID WHERE concert.Year  >  2013 GROUP BY concert.Stadium_ID ORDER BY count(*) DESC LIMIT 1
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID WHERE Student.LName  =  'Smith'
SELECT count(*) FROM car_names
SELECT countries.CountryName FROM car_makers JOIN countries ON car_makers.Country  =  countries.CountryId GROUP BY car_makers.Country ORDER BY count(*) DESC LIMIT 1
SELECT car_makers.Id,  car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id HAVING count(*)  >=  2 INTERSECT SELECT car_makers.Id,  car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker GROUP BY car_makers.Id HAVING count(*)  >  3
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Weight  <  (SELECT avg(Weight) FROM cars_data)
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport OR airports.AirportCode  =  flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Student.Sex  =  "female" AND Pets.PetType  =  "dog"
SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id  =  model_list.Maker WHERE car_makers.Maker  =  "General Motors" OR cars_data.Weight  >  3500
SELECT stadium.Name,  stadium.Location FROM concert JOIN stadium ON concert.Stadium_ID  =  stadium.Stadium_ID WHERE concert.Year  =  2014 INTERSECT SELECT stadium.Name,  stadium.Location FROM concert JOIN stadium ON concert.Stadium_ID  =  stadium.Stadium_ID WHERE concert.Year  =  2015
SELECT DISTINCT Student.Major,  Student.Age FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID EXCEPT SELECT DISTINCT Student.Major,  Student.Age FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat"
SELECT DISTINCT Student.Fname,  Student.Sex FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID GROUP BY Has_Pet.StuID HAVING count(*)  >  1
SELECT countries.CountryId,  countries.CountryName FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country GROUP BY countries.CountryId HAVING count(*)  >  3 UNION SELECT countries.CountryId,  countries.CountryName FROM countries JOIN car_names ON countries.CountryId  =  car_names.MakeId WHERE car_names.Model  =  "fiat"
SELECT countries.CountryId,  countries.CountryName FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country GROUP BY countries.CountryId HAVING count(*)  >  3 UNION SELECT countries.CountryId,  countries.CountryName FROM countries JOIN car_names ON countries.CountryId  =  car_names.MakeId WHERE car_names.Model  =  "fiat"
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID WHERE Student.LName  =  'Smith'
SELECT Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID  =  concert.Stadium_ID
SELECT countries.CountryName,  countries.CountryId FROM countries JOIN car_makers ON countries.CountryId  =  car_makers.Country GROUP BY countries.CountryId HAVING count(*)  >=  1
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Weight  <  (SELECT avg(Weight) FROM cars_data)
SELECT car_names.Make,  cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE cars_data.Cylinders  =  3 ORDER BY cars_data.Horsepower DESC LIMIT 1
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode  =  flights.SourceAirport GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT max(Horsepower) FROM cars_data)
SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR YEAR  <  1980
SELECT Major,  Age FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat")
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline GROUP BY flights.Airline HAVING count(*)  <  200
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
SELECT count(*) FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID WHERE Student.Age  >  20
SELECT count(*) FROM concert WHERE Stadium_ID  =  (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT Song_Name,  Song_release_year FROM singer ORDER BY Age ASC LIMIT 1
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  "Cat" INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID  =  Has_Pet.StuID JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  "Dog"
SELECT StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE PetType  =  "Cat"
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id  =  car_names.MakeId WHERE car_names.Model  =  "volvo" ORDER BY cars_data.Accelerate ASC LIMIT 1
SELECT Template_Type_Code FROM Templates EXCEPT SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights)
SELECT Documents.Document_ID FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Paragraphs.Paragraph_Text  =  "Brazil" INTERSECT SELECT Documents.Document_ID FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Paragraphs.Paragraph_Text  =  "Ireland"
SELECT Documents.Document_Name FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Templates.Template_Type_Code  =  "BK"
SELECT Templates.Template_ID,  Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_ID ORDER BY count(*) DESC LIMIT 1
SELECT max(loser_rank) FROM matches
SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING count(*)  >=  2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1
SELECT avg(winner_age),  avg(loser_age) FROM matches
SELECT players.first_name,  players.country_code FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "WTA Championships" INTERSECT SELECT players.first_name,  players.country_code FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "Australian Open"
SELECT Template_ID FROM Templates EXCEPT SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2
SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_ID HAVING count(*)  >  1
SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.year  =  2013 INTERSECT SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.year  =  2016
SELECT Name FROM teacher EXCEPT SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID
SELECT Template_Type_Code FROM Templates EXCEPT SELECT Template_Type_Code FROM Documents
SELECT Templates.Template_ID,  Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_ID ORDER BY count(*) DESC LIMIT 1
SELECT players.first_name,  players.country_code,  players.birth_date FROM players JOIN matches ON players.player_id  =  matches.winner_id GROUP BY matches.winner_id ORDER BY sum(matches.winner_rank_points) DESC LIMIT 1
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
SELECT visitor.ID,  visitor.Name,  visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID  =  visit.visitor_ID GROUP BY visitor.ID ORDER BY sum(visit.Total_spent) DESC LIMIT 1
SELECT shop.Manager_name,  shop.District FROM shop JOIN product ON shop.Shop_ID  =  product.Shop_ID GROUP BY shop.Shop_ID ORDER BY count(*) DESC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*) BETWEEN 1 AND 2
SELECT count(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage  =  225)
SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID EXCEPT SELECT teacher.Name FROM course_arrange JOIN course ON course_arrange.Course_ID  =  course.Course_ID
SELECT avg(loser_age),  avg(winner_age) FROM matches
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT players.first_name,  players.country_code,  players.birth_date FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.winner_rank_points  =  (SELECT max(winner_rank_points) FROM matches)
SELECT Departments.department_name,  Degree_Programs.department_id FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id  =  Departments.department_id GROUP BY Degree_Programs.department_id ORDER BY count(*) DESC LIMIT 1
SELECT battle.id,  battle.name FROM battle JOIN death ON battle.id  =  death.caused_by_ship_id GROUP BY battle.id HAVING sum(death.killed)  >  10
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID  =  evaluation.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY count(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown HAVING count(*)  >=  2
SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "Australian Open" ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT Name FROM museum WHERE Num_of_Staff  >  (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year  >  2010)
SELECT battle.id,  battle.name FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.ship_type  =  "Brig"
SELECT battle.name,  battle.date FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.name  =  "Lettice" INTERSECT SELECT battle.name,  battle.date FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.name  =  "HMS Atalanta"
SELECT Documents.Document_ID ,  Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM museum EXCEPT SELECT museum.Name FROM museum JOIN visit ON museum.Museum_ID  =  visit.Museum_ID
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Templates.Template_Type_Code  =  "PPT"
SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id OR players.player_id  =  matches.loser_id ORDER BY matches.minutes DESC LIMIT 1
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text  =  "Brazil" INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text  =  "Ireland"
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*)  <  3
SELECT players.first_name,  players.last_name,  rankings.ranking_points FROM rankings JOIN players ON rankings.player_id  =  players.player_id WHERE rankings.ranking  =  (SELECT max(ranking) FROM rankings)
SELECT Hometown FROM teacher GROUP BY Hometown HAVING count(*)  >=  2
SELECT museum.Name,  museum.Museum_ID FROM museum JOIN visit ON museum.Museum_ID  =  visit.Museum_ID GROUP BY visit.Museum_ID ORDER BY count(*) DESC LIMIT 1
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
SELECT shop.Manager_name,  shop.District FROM shop JOIN evaluation ON shop.Shop_ID  =  evaluation.Shop_ID GROUP BY shop.Shop_ID ORDER BY sum(evaluation.Number_products) DESC LIMIT 1
SELECT avg(Age) FROM visitor WHERE Level_of_membership  >  4
SELECT count(DISTINCT players.first_name) FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "WTA Championships" INTERSECT SELECT count(DISTINCT players.first_name) FROM players JOIN matches ON players.player_id  =  matches.loser_id WHERE matches.tourney_name  =  "WTA Championships" AND players.hand  =  "L"
SELECT Documents.Document_ID,  Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID  =  Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY count(*) DESC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1
SELECT visitor.ID,  visitor.Name,  visitor.Age FROM visitor JOIN visit ON visitor.ID  =  visit.visitor_ID GROUP BY visitor.ID HAVING count(*)  >  1
SELECT players.country_code,  players.first_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "WTA Championships" INTERSECT SELECT players.country_code,  players.first_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.tourney_name  =  "Australian Open"
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM employee EXCEPT SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID  =  evaluation.Employee_ID
SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID  =  hiring.Shop_ID GROUP BY hiring.Shop_ID ORDER BY count(*) DESC LIMIT 1
SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.year  =  2013 INTERSECT SELECT players.first_name,  players.last_name FROM players JOIN matches ON players.player_id  =  matches.winner_id WHERE matches.year  =  2016
SELECT players.first_name,  players.last_name,  matches.winner_rank FROM players JOIN matches ON players.player_id  =  matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3
SELECT count(*) FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID WHERE Templates.Template_Type_Code  =  "PPT"
SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)
SELECT avg(injured) FROM death
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*)  <  3
SELECT teacher.Name FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID  =  teacher.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING count(*)  >=  2
SELECT count(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID
SELECT ship.id,  ship.name FROM ship JOIN death ON ship.id  =  death.caused_by_ship_id GROUP BY death.caused_by_ship_id ORDER BY sum(death.injured) DESC LIMIT 1
SELECT players.first_name,  players.country_code FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY players.player_id ORDER BY count(*) DESC LIMIT 1
SELECT battle.name,  battle.result,  battle.bulgarian_commander FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.location  =  "English Channel"
SELECT avg(winner_rank) FROM matches
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID  =  evaluation.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY sum(evaluation.Bonus) DESC LIMIT 1
SELECT loser_rank FROM matches ORDER BY loser_rank_points DESC LIMIT 1
SELECT players.first_name,  players.last_name,  rankings.ranking_points FROM rankings JOIN players ON rankings.player_id  =  players.player_id WHERE rankings.ranking  =  (SELECT max(ranking) FROM rankings)
SELECT employee.Name FROM evaluation JOIN employee ON evaluation.Employee_ID  =  employee.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID  =  hiring.Shop_ID GROUP BY hiring.Shop_ID ORDER BY count(*) DESC LIMIT 1
SELECT visitor.Name FROM museum JOIN visit ON museum.Museum_ID  =  visit.Museum_ID JOIN visitor ON visit.visitor_ID  =  visitor.ID WHERE museum.Open_Year  <  2009 INTERSECT SELECT visitor.Name FROM museum JOIN visit ON museum.Museum_ID  =  visit.Museum_ID JOIN visitor ON visit.visitor_ID  =  visitor.ID WHERE museum.Open_Year  >  2011
SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000
SELECT visitor.Name,  visitor.Age FROM visitor JOIN visit ON visitor.ID  =  visit.visitor_ID GROUP BY visitor.ID ORDER BY sum(Num_of_Ticket) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID GROUP BY Templates.Template_ID HAVING count(*)  >  1
SELECT players.first_name,  players.last_name,  rankings.ranking FROM rankings JOIN players ON rankings.player_id  =  players.player_id WHERE rankings.ranking_date  =  (SELECT min(ranking_date) FROM rankings) ORDER BY players.birth_date ASC LIMIT 3
SELECT employee.City FROM employee JOIN hiring ON employee.Employee_ID  =  hiring.Employee_ID WHERE employee.Age  <  30 GROUP BY employee.City HAVING count(*)  >  1
SELECT avg(winner_rank) FROM matches
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2
SELECT count(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2010))
SELECT count(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Documents.Document_Name  =  "Summer Show"
SELECT Template_ID FROM Templates EXCEPT SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID  =  Documents.Template_ID
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID  =  evaluation.Employee_ID WHERE evaluation.Bonus  =  (SELECT max(Bonus) FROM evaluation)
SELECT count(*) FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID  =  Documents.Document_ID WHERE Documents.Document_Name  =  "Summer Show"
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID  =  evaluation.Employee_ID EXCEPT SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID  =  evaluation.Employee_ID WHERE evaluation.Bonus  >  0
SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)
SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >=  2
SELECT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' AND city.Population  =  ( SELECT MAX ( city.Population ) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' );
SELECT COUNT (DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "English" INTERSECT SELECT COUNT (DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Dutch"
SELECT avg(GNP),  sum(Population) FROM country WHERE GovernmentForm  =  'US Territory'
SELECT last_name FROM Students JOIN Addresses ON Students.permanent_address_id  =  Addresses.address_id WHERE state_province_county  =  "North Carolina" EXCEPT SELECT last_name FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id
SELECT Production_code,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.GovernmentForm  =  'Republic' GROUP BY countrylanguage.Language HAVING count(*)  =  1
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id  =  Addresses.address_id WHERE country  =  "Haiti" UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  09700166582
SELECT country.Region FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Dutch' OR countrylanguage.Language  =  'English'
SELECT COUNT (DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Name  =  "Aruba";
SELECT country.Region FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "English" OR countrylanguage.Language  =  "Dutch"
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id  =  Student_Enrolment_Courses.course_id GROUP BY Courses.course_id ORDER BY count(*) DESC LIMIT 1
SELECT COUNT (DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Chinese";
SELECT Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Written_by  =  "Todd Casey"
SELECT TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel GROUP BY TV_Channel.id HAVING count(*)  >  2
SELECT Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID
SELECT count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Name  =  "Afghanistan" AND countrylanguage.IsOfficial  =  1;
SELECT avg(GNP),  sum(Population) FROM country WHERE GovernmentForm  =  'United States'
SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic'
SELECT COUNT (DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.IndepYear  <  1930 AND countrylanguage.IsOfficial  =  1
SELECT count(*),  student_enrolment_id FROM Transcript_Contents GROUP BY student_enrolment_id ORDER BY count(*) DESC LIMIT 1
SELECT Transcripts.transcript_date,  Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id  =  Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id HAVING count(*)  >=  2
SELECT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' AND country.Population  =  ( SELECT MAX ( country.Population ) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' );
SELECT Students.first_name,  Students.middle_name,  Students.last_name,  Students.student_id FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id  =  Degree_Programs.degree_program_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id  =  Student_Enrolment_Courses.student_enrolment_id GROUP BY Students.student_id HAVING count(*)  =  2
SELECT Semesters.semester_name,  Semesters.semester_id FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id GROUP BY Semesters.semester_id ORDER BY count(*) DESC LIMIT 1
SELECT Addresses.line_1,  Addresses.line_2,  Addresses.address_id FROM Addresses JOIN Students ON Addresses.address_id  =  Students.permanent_address_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name  =  "Masters") INTERSECT SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name  =  "Bachelors")
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.HeadOfState  =  "Beatrix";
SELECT semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id
SELECT count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.IndepYear  <  1930 AND countrylanguage.IsOfficial  =  1
SELECT people.Birth_Date FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1
SELECT Students.first_name,  Students.middle_name,  Students.last_name,  Student_Enrolment.student_id,  count(*) FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id GROUP BY Student_Enrolment.student_id ORDER BY count(*) DESC LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'French'
SELECT semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id
SELECT Money_Rank FROM poker_player ORDER BY people.Height DESC LIMIT 1
SELECT avg(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' AND countrylanguage.IsOfficial  =  'False'
SELECT COUNT (DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Chinese"
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Asia' GROUP BY countrylanguage.Language ORDER BY count(*) DESC LIMIT 1
SELECT SUM (Population),  MAX (GNP) FROM country WHERE Continent  =  'Asia';
SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE TV_Channel.series_name  =  "Sky Radio"
SELECT Country,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1
SELECT country.Continent FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1
SELECT first_name,  middle_name,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
SELECT country.Continent FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "English" AND country.Name  =  "Anguilla";
SELECT Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Ben Jones"
SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID
SELECT Students.first_name,  Students.middle_name,  Students.last_name,  Students.student_id FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id  =  Degree_Programs.degree_program_id JOIN Semesters ON Student_Enrolment.semester_id  =  Semesters.semester_id GROUP BY Students.student_id HAVING count(*)  =  2
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county  =  "North Carolina") EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'French'
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id  =  Student_Enrolment_Courses.course_id
SELECT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel EXCEPT SELECT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Ben Jones"
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Written_by  =  "Todd Casey"
SELECT Language,  count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1
SELECT Courses.course_id,  count(*) FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id  =  Student_Enrolment_Courses.course_id JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id  =  Transcript_Contents.student_course_id GROUP BY Courses.course_id ORDER BY count(*) DESC LIMIT 1
SELECT Transcripts.transcript_date,  Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id  =  Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id HAVING count(*)  >=  2
SELECT Semesters.semester_id FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id JOIN Semesters ON Student_Enrolment.semester_id  =  Semesters.semester_id WHERE Degree_Programs.degree_summary_name  =  "Bachelor" INTERSECT SELECT Semesters.semester_id FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id JOIN Semesters ON Student_Enrolment.semester_id  =  Semesters.semester_id WHERE Degree_Programs.degree_summary_name  =  "Master"
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id  =  Student_Enrolment_Courses.course_id GROUP BY Courses.course_id ORDER BY count(*) DESC LIMIT 1
SELECT TV_Channel.series_name,  TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Ben Jones" INTERSECT SELECT TV_Channel.series_name,  TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Michael Chang"
SELECT Degree_Programs.degree_program_id,  Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Ben Jones"
SELECT count(*) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id  =  Departments.department_id WHERE Departments.department_name  =  "engineering"
SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY count(*) DESC LIMIT 1
SELECT Departments.department_name,  Degree_Programs.department_id FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id  =  Departments.department_id GROUP BY Degree_Programs.department_id ORDER BY count(*) DESC LIMIT 1
SELECT COUNT (DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "English" INTERSECT SELECT COUNT (DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "Dutch"
SELECT SUM ( country.Population ),  MAX ( country.GNP ) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Asia'
SELECT Addresses.address_id,  Addresses.line_1,  Addresses.line_2,  Addresses.line_3 FROM Addresses JOIN Students ON Addresses.address_id  =  Students.current_address_id GROUP BY Addresses.address_id ORDER BY count(*) DESC LIMIT 1
SELECT Degree_Programs.degree_program_id,  Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT Students.student_id,  Students.first_name,  Students.middle_name,  Students.last_name,  count(*),  Student_Enrolment.student_id FROM Students JOIN Student_Enrolment ON Students.student_id  =  Student_Enrolment.student_id GROUP BY Student_Enrolment.student_id ORDER BY count(*) DESC LIMIT 1
SELECT sum(country.Population) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= 'English'
SELECT count(*) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id  =  Departments.department_id WHERE Departments.department_name  =  "engineering"
SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID WHERE people.Height  >  200
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Name  =  "Aruba" AND countrylanguage.IsOfficial  =  1 GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage) DESC LIMIT 1
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Name ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM country WHERE SurfaceArea  >  (SELECT max(SurfaceArea) FROM country WHERE Continent  =  'Europe')
SELECT Name FROM country WHERE SurfaceArea  >  (SELECT max(SurfaceArea) FROM country WHERE Continent  =  'Europe')
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.HeadOfState  =  "Beatrix";
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Written_by  =  "Todd Casey"
SELECT Courses.course_name,  Courses.course_id FROM Courses JOIN Sections ON Courses.course_id  =  Sections.course_id GROUP BY Courses.course_id HAVING count(*)  <  2
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Name ORDER BY count(*) DESC LIMIT 1
SELECT SUM (SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'
SELECT CONTESTANTS.contestant_number,  CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number  =  VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number ORDER BY count(*) ASC LIMIT 1
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  "English" OR countrylanguage.Language  =  "Dutch"
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Written_by  =  "Todd Casey"
SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >=  2
SELECT sum(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Name  =  "Aruba";
SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  'Africa' AND GovernmentForm  =  'Republic'
SELECT VOTES.created,  VOTES.state,  VOTES.phone_number FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number  =  VOTES.contestant_number WHERE CONTESTANTS.contestant_name  =  "Tabatha Gehling"
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state  =  VOTES.state GROUP BY AREA_CODE_STATE.area_code ORDER BY count(*) DESC LIMIT 1
SELECT id FROM TV_Channel GROUP BY id HAVING count(*)  >  2
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'French'
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state  =  VOTES.state WHERE VOTES.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name  =  "Tabatha Gehling") INTERSECT SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state  =  VOTES.state WHERE VOTES.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name  =  "Kelly Clauss")
SELECT count(DISTINCT department_id) FROM Degree_Programs
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country  =  "Haiti") OR cell_mobile_number  =  09700166582
SELECT country.Continent FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Continent ORDER BY count(*) DESC LIMIT 1
SELECT Transcripts.transcript_date,  Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id  =  Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(*) ASC LIMIT 1
SELECT people.Birth_Date FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1
SELECT Language,  count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Asia' GROUP BY countrylanguage.Language ORDER BY count(*) DESC LIMIT 1
SELECT TV_Channel.id FROM TV_Channel JOIN TV_series ON TV_Channel.id  =  TV_series.Channel EXCEPT SELECT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Ben Jones"
SELECT Transcripts.transcript_date,  Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id  =  Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(*) ASC LIMIT 1
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.GovernmentForm  =  'Republic' GROUP BY countrylanguage.Language HAVING count(*)  =  1
SELECT CONTESTANTS.contestant_number,  CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number  =  VOTES.contestant_number GROUP BY CONTESTANTS.contestant_number HAVING count(*)  >=  2
SELECT count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Name  =  "Afghanistan" AND countrylanguage.IsOfficial  =  1;
SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  "English" AND IsOfficial  =  1)
SELECT SUM ( country.Population ) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= "English";
SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID  =  people.People_ID WHERE people.Height  >  200
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Chinese' AND country.Continent  =  'Asia' ORDER BY country.LifeExpectancy ASC LIMIT 1
SELECT TV_Channel.series_name,  TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Ben Jones" INTERSECT SELECT TV_Channel.series_name,  TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id  =  Cartoon.Channel WHERE Cartoon.Directed_by  =  "Michael Chang"
SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id  =  Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT count(DISTINCT department_id) FROM Degree_Programs
SELECT Courses.course_name,  Courses.course_id FROM Courses JOIN Sections ON Courses.course_id  =  Sections.course_id GROUP BY Courses.course_id HAVING count(*)  <=  2
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'French'
SELECT Semesters.semester_name,  Semesters.semester_id FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id GROUP BY Semesters.semester_id ORDER BY count(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
SELECT country.Name,  country.Population,  country.LifeExpectancy FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Chinese' AND country.Region  =  'Asia' AND country.SurfaceArea  =  ( SELECT MAX ( SurfaceArea ) FROM country WHERE Region  =  'Asia' );
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID GROUP BY conductor.Conductor_ID HAVING count(*)  >  1
SELECT GovernmentForm,  sum(Population) FROM country WHERE LifeExpectancy  >  72 GROUP BY GovernmentForm
SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Spanish' ORDER BY countrylanguage.Percentage DESC LIMIT 1;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id JOIN Owners ON Dogs.owner_id  =  Owners.owner_id EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id JOIN Owners ON Dogs.owner_id  =  Owners.owner_id WHERE Treatments.cost_of_treatment  >  1000
SELECT Name,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT singer.Name FROM singer EXCEPT SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID
SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode EXCEPT SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'English' AND country.GovernmentForm  =  'Republic'
SELECT Name FROM country WHERE Continent  =  'Asia' AND Population  >  (SELECT MAX (Population) FROM country WHERE Continent  =  'Africa')
SELECT count(*) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)
SELECT email_address,  role_code,  first_name,  last_name FROM Professionals EXCEPT SELECT Professionals.email_address,  Professionals.role_code,  Professionals.first_name,  Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY count(*) DESC LIMIT 1
SELECT Owners.owner_id,  Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id  =  Dogs.owner_id JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id GROUP BY Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1
SELECT DISTINCT PROFESSIONALS.professional_id,  PROFESSIONALS.last_name,  PROFESSIONALS.cell_number FROM Treatments JOIN PROFESSIONALS ON Treatments.professional_id  =  PROFESSIONALS.professional_id WHERE PROFESSIONALS.state  =  "Indiana" UNION SELECT DISTINCT PROFESSIONALS.professional_id,  PROFESSIONALS.last_name,  PROFESSIONALS.cell_number FROM Treatments JOIN PROFESSIONALS ON Treatments.professional_id  =  PROFESSIONALS.professional_id GROUP BY PROFESSIONALS.professional_id HAVING count(*)  >  2
SELECT DISTINCT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
SELECT Orchestra FROM orchestra EXCEPT SELECT orchestra.Orchestra FROM orchestra JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1
SELECT property_name FROM Properties WHERE property_type_code  =  "house" OR property_type_code  =  "apartment" AND room_count  >  1
SELECT count(*) FROM Likes JOIN Highschooler ON Likes.liked_id  =  Highschooler.ID WHERE Highschooler.name  =  "Kyle"
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID GROUP BY conductor.Conductor_ID HAVING count(*)  >  1
SELECT count(*) FROM Friend JOIN Highschooler ON Friend.student_id  =  Highschooler.ID WHERE Highschooler.name  =  "Kyle"
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code  =  Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_code ORDER BY sum(Treatments.cost_of_treatment) LIMIT 1
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY count(*) DESC LIMIT 1
SELECT Owners.last_name FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id ORDER BY Dogs.age ASC LIMIT 1
SELECT country.Name,  country.IndepYear,  country.SurfaceArea FROM country WHERE country.Population  =  ( SELECT MIN ( country.Population ) FROM country );
SELECT name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id
SELECT Ref_Feature_Types.feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types ON Other_Available_Features.feature_type_code  =  Ref_Feature_Types.feature_type_code WHERE Other_Available_Features.feature_name  =  "AirCon"
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
SELECT count(DISTINCT dog_id) FROM Treatments
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id HAVING count(*)  >=  2 INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id GROUP BY Likes.student_id HAVING count(*)  >=  2 AND Highschooler.grade  >  5
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id HAVING count(*)  >=  3
SELECT name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.student_id  =  Highschooler.ID EXCEPT SELECT Highschooler.name FROM Friend JOIN Highschooler ON Friend.friend_id  =  Highschooler.ID
SELECT email_address,  role_code FROM Professionals EXCEPT SELECT Professionals.email_address,  Professionals.role_code FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id ORDER BY count(*) DESC LIMIT 1
SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.liked_id GROUP BY Likes.liked_id ORDER BY count(*) DESC LIMIT 1
SELECT Highschooler.name FROM Likes JOIN Highschooler ON Likes.liked_id  =  Highschooler.ID GROUP BY Likes.liked_id ORDER BY count(*) DESC LIMIT 1
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id
SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= "English" AND country.GovernmentForm!= "Republic";
SELECT GovernmentForm,  sum(Population) FROM country WHERE LifeExpectancy  >  72 GROUP BY GovernmentForm
SELECT country.Name,  count(*) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Name HAVING count(*)  >=  3
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT Highschooler.ID FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id INTERSECT SELECT Highschooler.ID FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id INTERSECT SELECT Highschooler.ID FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.friend_id
SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE singer.Birth_Year  <  1945 INTERSECT SELECT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE singer.Birth_Year  >  1955
SELECT Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code  =  Breeds.breed_code GROUP BY Dogs.breed_code ORDER BY count(*) DESC LIMIT 1
SELECT Owners.owner_id,  Owners.first_name,  Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id  =  Dogs.owner_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT country.Code,  countrylanguage.Language,  max(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Code,  countrylanguage.Language
SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID GROUP BY orchestra.Year_of_Founded HAVING count(*)  >  1
SELECT Highschooler.name FROM Likes JOIN Highschooler ON Likes.student_id  =  Highschooler.ID GROUP BY Likes.student_id HAVING count(*)  >=  2
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY countrylanguage.Language ORDER BY count(*) DESC LIMIT 1
SELECT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' AND country.Continent  =  'Europe' EXCEPT SELECT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' AND countrylanguage.IsOfficial  =  1
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
SELECT Record_Company,  count(*) FROM orchestra GROUP BY Record_Company
SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= "English"
SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= "English"
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id ORDER BY count(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra WHERE YEAR_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE YEAR_of_Founded  >  2003
SELECT countrylanguage.Language,  max(countrylanguage.Percentage),  country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Name
SELECT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' AND country.Continent  =  'Europe' EXCEPT SELECT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE countrylanguage.Language  =  'English' AND country.Continent  =  'Europe' AND countrylanguage.IsOfficial  =  1
SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
SELECT count(*) FROM Friend WHERE student_id  =  (SELECT ID FROM Highschooler WHERE name  =  "Kyle")
SELECT Dogs.name,  Treatments.date_of_treatment FROM Treatments JOIN Dogs ON Treatments.dog_id  =  Dogs.dog_id WHERE Dogs.breed_code  =  (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) DESC LIMIT 1)
SELECT Owners.owner_id,  Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id  =  Dogs.owner_id JOIN Charges ON Dogs.dog_id  =  Charges.charge_id GROUP BY Owners.owner_id ORDER BY sum(charge_amount) DESC LIMIT 1
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id HAVING count(*)  >=  3
SELECT avg(LifeExpectancy),  sum(Population),  Continent FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
SELECT Owners.owner_id,  Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id  =  Dogs.owner_id JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id GROUP BY Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1
SELECT DISTINCT Professionals.professional_id,  Professionals.last_name,  Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id WHERE Professionals.state  =  "Indiana" OR Treatments.treatment_id  >  2
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code  =  Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_code ORDER BY sum(Treatments.cost_of_treatment) ASC LIMIT 1
SELECT orchestra.Orchestra FROM orchestra JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID EXCEPT SELECT orchestra.Orchestra FROM orchestra JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
SELECT Professionals.professional_id,  Professionals.role_code,  Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id GROUP BY Treatments.professional_id HAVING count(*)  >=  2
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code  =  Breeds.breed_code GROUP BY Dogs.breed_code ORDER BY count(*) DESC LIMIT 1
SELECT Highschooler.name FROM Likes JOIN Highschooler ON Likes.student_id  =  Highschooler.ID GROUP BY Likes.student_id HAVING count(*)  >=  2
SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend
SELECT count(DISTINCT professional_id) FROM Treatments
SELECT count(*) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)
SELECT DISTINCT PROFESSIONALS.first_name,  PROFESSIONALS.last_name FROM Treatments JOIN PROFESSIONALS ON Treatments.professional_id  =  PROFESSIONALS.professional_id WHERE Treatments.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)
SELECT Name FROM singer EXCEPT SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID
SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT Highschooler.ID FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id INTERSECT SELECT Highschooler.ID FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id
SELECT country.Name FROM country JOIN city ON country.Code  =  city.CountryCode WHERE country.Continent  =  'Africa' AND city.Population  <  (SELECT min(city.Population) FROM country JOIN city ON country.Code  =  city.CountryCode WHERE country.Continent  =  'Asia')
SELECT Name,  IndepYear,  SurfaceArea FROM country WHERE Population  =  ( SELECT MIN ( Population ) FROM country );
SELECT Owners.last_name FROM Dogs JOIN Owners ON Dogs.owner_id  =  Owners.owner_id WHERE Dogs.age  =  (SELECT min(age) FROM Dogs)
SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT DISTINCT PROFESSIONALS.professional_id,  PROFESSIONALS.cell_number FROM Treatments JOIN PROFESSIONALS ON Treatments.professional_id  =  PROFESSIONALS.professional_id GROUP BY Treatments.professional_id HAVING count(*)  >=  2
SELECT count(*),  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= "English"
SELECT Professionals.professional_id,  cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id GROUP BY Treatments.professional_id HAVING count(*)  >=  2
SELECT Professionals.professional_id,  Professionals.role_code,  Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id  =  Treatments.professional_id GROUP BY Treatments.professional_id HAVING count(*)  >=  2
SELECT count(*),  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
SELECT Owners.owner_id,  Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id  =  Dogs.owner_id JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id GROUP BY Owners.owner_id ORDER BY sum(Treatments.cost_of_treatment) DESC LIMIT 1
SELECT count(DISTINCT professional_id) FROM Treatments
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Africa' AND country.Population  <  (SELECT MAX (country.Population) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Asia')
SELECT DISTINCT PROFESSIONALS.first_name,  PROFESSIONALS.last_name FROM Treatments JOIN PROFESSIONALS ON Treatments.professional_id  =  PROFESSIONALS.professional_id WHERE Treatments.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Singer_ID HAVING count(*)  >  1
SELECT Continent,  sum(Population),  avg(LifeExpectancy) FROM country WHERE LifeExpectancy  <  72 GROUP BY Continent
SELECT avg(Highschooler.grade) FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id INTERSECT SELECT avg(Highschooler.grade) FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id WHERE Treatments.cost_of_treatment  >  1000
SELECT DISTINCT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE singer.Birth_Year  <  1945 INTERSECT SELECT DISTINCT singer.Citizenship FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID WHERE singer.Birth_Year  >  1955
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID  =  Friend.student_id GROUP BY Friend.student_id HAVING count(*)  >=  2 INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID  =  Likes.student_id WHERE Highschooler.grade  >  5
SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT COUNT (DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Spanish'
SELECT Owners.owner_id,  Owners.first_name,  Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id  =  Dogs.owner_id GROUP BY Owners.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID  =  song.Singer_ID GROUP BY singer.Singer_ID HAVING count(*)  >  1
SELECT avg(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id  =  Treatments.dog_id
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
SELECT count(*) FROM Likes JOIN Highschooler ON Likes.liked_id  =  Highschooler.ID WHERE Highschooler.name  =  "Kyle"
SELECT sum(country.Population),  avg(country.SurfaceArea) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'North America' AND country.SurfaceArea  >  3000;
SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language!= "English"
SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID  =  performance.Orchestra_ID GROUP BY orchestra.Year_of_Founded HAVING count(*)  >  1
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID  =  orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY sum(orchestra.Year_of_Founded) DESC LIMIT 1
SELECT country.Name,  count(*) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode GROUP BY country.Name HAVING count(*)  >  2;
SELECT country.Name,  country.Population,  country.HeadOfState FROM country WHERE country.SurfaceArea  =  ( SELECT MAX ( country.SurfaceArea ) FROM country );
SELECT country.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Asia' AND country.Population  >  (SELECT MAX (country.Population) FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE country.Continent  =  'Africa')
SELECT country.Code FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode WHERE countrylanguage.Language  =  'Spanish' ORDER BY countrylanguage.Percentage DESC LIMIT 1
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT DISTINCT city.Name FROM country JOIN countrylanguage ON country.Code  =  countrylanguage.CountryCode JOIN city ON city.CountryCode  =  country.Code WHERE country.Continent  =  'Asia' AND countrylanguage.Language  =  'Chinese' AND countrylanguage.IsOfficial  =  1
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1
SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend
SELECT max(Share),  min(Share) FROM performance WHERE TYPE!= "Live final"
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  'CVO' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline  =  flights.Airline WHERE flights.SourceAirport  =  'APG'
SELECT count(DISTINCT current_address_id) FROM Students
