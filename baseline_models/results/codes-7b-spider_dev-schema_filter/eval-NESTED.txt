hard pred: SELECT state.capital FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.length  =  ( SELECT MAX ( river.length ) FROM river JOIN state ON river.traverse  =  state.state_name );
hard gold: SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );

hard pred: SELECT state.state_name FROM state JOIN city ON state.capital  =  city.city_name WHERE city.population  =  ( SELECT MAX ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name );
hard gold: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

hard pred: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info );
hard gold: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );

extra pred: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" );
extra gold: SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "oklahoma" ) ORDER BY population DESC LIMIT 1;

medium pred: SELECT state_name,  MAX ( highest_elevation ) FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE lowest_elevation  >  0 ) GROUP BY state_name;
medium gold: SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;

extra pred: SELECT river.river_name FROM city JOIN state ON city.state_name  =  state.state_name JOIN river ON river.traverse  =  state.state_name WHERE state.state_name IN ( SELECT state_name FROM city GROUP BY state_name ORDER BY COUNT (*) DESC LIMIT 1 ) AND river.length  =  ( SELECT MAX ( river.length ) FROM river JOIN state ON river.traverse  =  state.state_name WHERE state.state_name IN ( SELECT state_name FROM city GROUP BY state_name ORDER BY COUNT (*) DESC LIMIT 1 ) );
extra gold: SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;

extra pred: SELECT highlow.lowest_elevation FROM highlow JOIN river ON highlow.state_name  =  river.traverse WHERE river.river_name  =  "mississippi";
extra gold: SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ORDER BY lowest_elevation LIMIT 1;

hard pred: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "colorado" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "colorado" );
hard gold: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "colorado" ) );

hard pred: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
hard gold: SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );

hard pred: SELECT state_name FROM state WHERE capital  =  ( SELECT MAX ( capital ) FROM state );
hard gold: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

hard pred: SELECT state_name FROM state EXCEPT SELECT border FROM border_info
hard gold: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );

extra pred: SELECT highlow.lowest_elevation FROM highlow JOIN river ON highlow.state_name  =  river.traverse WHERE river.river_name  =  "mississippi";
extra gold: SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ORDER BY lowest_elevation LIMIT 1;

extra pred: SELECT LENGTH FROM river WHERE river_name  =  ( SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas" );
extra gold: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" ) AND traverse  =  "texas";

extra pred: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );
extra gold: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.capital  =  "des moines";
hard gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  "des moines" );

extra pred: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) );
extra gold: SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) ) ) ORDER BY population DESC LIMIT 1;

extra pred: SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" AND highlow.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" );
extra gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "colorado" ) ORDER BY highest_elevation DESC LIMIT 1;

hard pred: SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name IN ( SELECT border FROM border_info WHERE state_name  =  "mississippi" ) ORDER BY highlow.highest_elevation DESC;
hard gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "mississippi" );

hard pred: SELECT highlow.highest_point FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.density  =  ( SELECT MIN ( density ) FROM state );
hard gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state ) );

hard pred: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
hard gold: SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );

extra pred: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";
extra gold: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";

hard pred: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE river_name  =  "texas" ) AND river_name  =  "texas";
hard gold: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  "texas" );

hard pred: SELECT city_name FROM city WHERE state_name  =  ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
hard gold: SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );

extra pred: SELECT highlow.highest_elevation FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" AND highlow.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow JOIN border_info ON highlow.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" );
extra gold: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "colorado" ) ORDER BY highest_elevation DESC LIMIT 1;

hard pred: SELECT DISTINCT paper.journalId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "mohammad rastegari";
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "mohammad rastegari" AND t3.journalid  >=  0;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet";
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE "ImageNet";

extra pred: SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
extra gold: SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name  =  t2.traverse WHERE t1.state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "brian curless" INTERSECT SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "TACL" AND paper.year  =  2014 ORDER BY paper.numCiting DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  "TACL" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

hard pred: SELECT state.capital FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.border IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) );
hard gold: SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) );

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2000;
extra gold: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId  =  venue.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "RGB-D Object Dataset" AND keyphrase.keyphraseName  =  "Class consistent multi-modal fusion" AND paper.year  =  2016 AND venue.venueName  =  "CVPR";
extra gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "RGB-D Object Dataset" AND t3.title  =  "Class consistent multi-modal fusion with binary features" AND t3.year  =  2016 AND t4.venuename  =  "CVPR";

extra pred: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );
extra gold: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Multiuser Receiver" AND dataset.datasetName  =  "Decision Feedback" AND paper.year  =  2015;
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Multiuser Receiver in the Decision Feedback" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

medium pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "chi";
medium gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

extra pred: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
extra gold: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

hard pred: SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
hard gold: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );

medium pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sharon goldwater";
medium gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";

extra pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2012 AND venue.venueName  =  "acl" AND keyphrase.keyphraseName  =  "Parsing";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2015;
extra gold: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000;

hard pred: SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "ras bodik";
hard gold: SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "ras bodik";

medium pred: SELECT DISTINCT capital FROM state WHERE population  >  150000;
medium gold: SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;

easy pred: SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  "usa" );
easy gold: SELECT river_name FROM river WHERE country_name != "usa";

hard pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mirella Lapata";
hard gold: SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  "Mirella Lapata";

extra pred: SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.population  =  ( SELECT MIN ( population ) FROM state );
extra gold: SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );

hard pred: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );
hard gold: SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );

extra pred: SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing";

extra pred: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ) ) )
extra gold: SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE paper.year  =  2016 AND venue.venueName  =  "acl";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "keyphrase0";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing";

hard pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "zachary tatlock";
hard gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "zachary tatlock";

hard pred: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );
hard gold: SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sanjeev arora" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "sanjeev arora" ORDER BY t3.year DESC;

hard pred: SELECT state.capital FROM state JOIN city ON state.capital  =  city.city_name WHERE city.population  =  ( SELECT MIN ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name );
hard gold: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );

hard pred: SELECT DISTINCT paper.paperId ,  paper.year FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId WHERE keyphrase.keyphraseName  =  "Question Answering";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";

hard pred: SELECT traverse FROM river WHERE river_name  =  "mississippi";
hard gold: SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

hard pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Liwen Xiong" AND paper.year  =  2015;
hard gold: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015;

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

extra pred: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name IN ( SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE state_name  =  "virginia" ) ) );
extra gold: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  "virginia" ) );

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing";

hard pred: SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  "boston" );
hard gold: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  "boston" );

extra pred: SELECT state.population FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "texas" ORDER BY state.area DESC LIMIT 1;
extra gold: SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );

extra pred: SELECT highlow.highest_point FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.area  =  ( SELECT MAX ( area ) FROM state );
extra gold: SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2000;
extra gold: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000;

easy pred: SELECT state_name FROM state WHERE capital  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
easy gold: SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "li dong" AND paper.year  =  2016;
hard gold: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Christof Dallermassl" AND paper.year  =  2000;
extra gold: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Christof Dallermassl" AND t3.year  =  2000;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT writes.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

hard pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mirella Lapata";
hard gold: SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  "Mirella Lapata";

extra pred: SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "wyoming" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "wyoming" );
extra gold: SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "wyoming" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "wyoming" );

hard pred: SELECT state.density FROM river JOIN state ON river.traverse  =  state.state_name WHERE river.length  =  ( SELECT MAX ( LENGTH ) FROM river );
hard gold: SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );

hard pred: SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
hard gold: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );

extra pred: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
extra gold: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );

hard pred: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );
hard gold: SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT writes.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "oren etzioni" ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mark Steedman";
extra gold: SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != "Mark Steedman" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Mark Steedman" );

hard pred: SELECT population FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
hard gold: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );

extra pred: SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );
extra gold: SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "Parsing" AND paper.paperId IN (SELECT paperKeyphrase.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "acl");
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";

extra pred: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ) ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ) );
extra gold: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );

extra pred: SELECT border_info.border FROM border_info JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border_info.border  =  border_info.state_name JOIN border_info ON border
extra gold: SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  "texas";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "TACL" AND paper.year  =  2014 ORDER BY paper.numCiting DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  "TACL" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;

hard pred: SELECT highest_point FROM highlow WHERE state_name!= "alaska" ORDER BY highest_elevation DESC LIMIT 1
hard gold: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != "alaska" );

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "sanjeev arora" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "sanjeev arora" ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke Zettlemoyer";
extra gold: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";

extra pred: SELECT DISTINCT writes.paperId FROM writes JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =  writes.paperId JOIN writes ON writes.paperId  =
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "acl" AND paper.title  =  "Parsing";
extra gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";

extra pred: SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
extra gold: SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );

extra pred: SELECT capital FROM state WHERE state_name  =  ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
extra gold: SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT city.population FROM state JOIN city ON state.capital  =  city.city_name WHERE state.state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) AND city.population  =  ( SELECT MAX ( city.population ) FROM state JOIN city ON state.capital  =  city.city_name WHERE state.state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" ) );
hard gold: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name  =  t2.traverse WHERE t2.river_name  =  "mississippi" ) );

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Peter Mertens" AND author.authorName  =  "Dina Barbian";
extra gold: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";

hard pred: SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
hard gold: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );

hard pred: SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
hard gold: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );

extra pred: SELECT highlow.lowest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.area  =  ( SELECT MAX ( area ) FROM state );
extra gold: SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );

extra pred: SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );
extra gold: SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );

hard pred: SELECT COUNT ( border ) FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );
hard gold: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );

hard pred: SELECT COUNT ( traverse ) FROM river WHERE river_name  =  "mississippi";
hard gold: SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId WHERE author.authorName  =  "Mirella Lapata";
hard gold: SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  "Mirella Lapata";

hard pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "dependent types" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "dependent types";

extra pred: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT traverse FROM river ) ) AND state_name IN ( SELECT traverse FROM river );
extra gold: SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );

extra pred: SELECT DISTINCT paper.year ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Luke S Zettlemoyer";
extra gold: SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Luke S Zettlemoyer" ORDER BY t3.year  ,  t2.keyphraseid;

extra pred: SELECT COUNT ( border_info.state_name ) FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "colorado" INTERSECT SELECT COUNT ( border_info.state_name ) FROM state JOIN border_info ON state.state_name  =  border_info.border WHERE border_info.state_name  =  "new mexico";
extra gold: SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  "new mexico" ) AND state_name  =  "colorado";

extra pred: SELECT highlow.highest_elevation FROM state JOIN highlow ON state.state_name  =  highlow.state_name WHERE state.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );
extra gold: SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );

hard pred: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );
hard gold: SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  <  2014 AND venue.venueName  =  "ACL";
extra gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "parsing" AND t3.year  =  2014 AND t4.venuename  =  "ACL";

hard pred: SELECT river.river_name FROM river JOIN border_info ON river.traverse  =  border_info.border WHERE border_info.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );
hard gold: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );

easy pred: SELECT COUNT ( DISTINCT traverse ) FROM river;
easy gold: SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;

extra pred: SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  writes.authorId FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId GROUP BY writes.authorId ORDER BY COUNT ( cite.citingPaperId ) DESC;
extra gold: SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "Ed Desmond" AND keyphrase.keyphraseName  =  "Semantic Parsing";
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  "Ed Desmond" AND t4.keyphrasename  =  "Semantic Parsing";

extra pred: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ) ) AND traverse IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );
extra gold: SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "brian curless" AND keyphrase.keyphraseName  =  "convolution";
extra gold: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";

hard pred: SELECT COUNT ( traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );
hard gold: SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );

extra pred: SELECT border_info.border FROM border_info JOIN state ON border_info.border  =  state.state_name WHERE state.state_name  =  "texas" INTERSECT SELECT traverse FROM river WHERE LENGTH  >  750;
extra gold: SELECT state_name FROM border_info WHERE border  =  "texas" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 );

extra pred: SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "mirella lapata" AND paper.year  =  2016;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "mirella lapata" AND t3.year  =  2016 GROUP BY t2.authorid;

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
extra gold: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE "sensor fusion";

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Philipp Koehn" AND keyphrase.keyphraseName  =  "Machine Translation Output";
extra gold: SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  "Philipp Koehn" AND t3.keyphrasename  =  "Machine Translation Output";

extra pred: SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "Bacterial Wilt" AND paper.year  =  2016;
extra gold: SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  "Bacterial Wilt" AND t4.year  =  2016;

hard pred: SELECT DISTINCT paper.paperId FROM paperKeyphrase JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN venue ON venue.venueId  =  paper.venueId WHERE keyphrase.keyphraseName  =  "neural attention" AND paper.year  =  2016 AND venue.venueName  =  "ACL";
hard gold: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE "neural attention" AND t1.year  =  2016 AND t2.venuename  =  "ACL";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
extra gold: SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  "deep learning" ORDER BY t4.year ASC;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Ye Cao" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE "Ye Cao" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet" AND paper.year  =  2014;
extra gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014 AND t4.venuename  =  "eccv";

hard pred: SELECT COUNT ( DISTINCT review.text ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id WHERE business.name  =  "Cafe Zinho" AND business.state  =  "Texas";
hard gold: SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  "Cafe Zinho" AND t1.state  =  "Texas" AND t2.category_name  =  "restaurant";

extra pred: SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
hard gold: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade";

medium pred: SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND neighbourhood.neighbourhood_name  =  "Stone Meadows";
medium gold: SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  "Madison" AND t2.neighbourhood_name  =  "Stone Meadows";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS";
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName  =  "ImageNet" AND paper.year  =  2014 AND paper.venueId  =  "eccv";
extra gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014 AND t4.venuename  =  "eccv";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2012 AND venue.venueName  =  "ACL" AND paper.numCiting  >  7;
extra gold: SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  "ACL" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  (SELECT max(YEAR) FROM paper WHERE venue.venueName  =  "deep learning") AND venue.venueName  =  "deep learning";
extra gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "benjamin mako hill" ORDER BY paper.year ASC;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "benjamin mako hill" GROUP BY t3.year ORDER BY t3.year;

hard pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "instance segmentation" AND keyphrase.keyphraseName  =  "journal";
hard gold: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "instance segmentation" AND t3.journalid  >=  0;

extra pred: SELECT neighbourhood.neighbourhood_name FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND business.rating  <  2.5 AND category.category_name  =  "Italian";
extra gold: SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  "Madison" AND t2.rating  <  2.5 AND t3.category_name  =  "Italian" AND t4.category_name  =  "restaurant";

extra pred: SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Takashi Matsumoto";
extra gold: SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Takashi Matsumoto" GROUP BY t3.journalid;

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Mirella Lapata" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Mirella Lapata" ORDER BY t3.year DESC LIMIT 5;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2014 AND venue.venueName  =  "ACL";
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  "ACL" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

hard pred: SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.name  =  "Bistro Di Napoli" AND review.year  =  2015;
hard gold: SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  "Bistro Di Napoli" AND t2.year  =  2015;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

hard pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN journal ON paper.journalId  =  journal.journalId WHERE journal.journalName  =  "Cell" AND paper.year  =  2015;
hard gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  "Cell" AND t3.year  =  2015;

extra pred: SELECT DISTINCT cite.citedPaperId ,  COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" GROUP BY cite.citedPaperId ORDER BY COUNT ( cite.citedPaperId ) DESC;
extra gold: SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  "parsing";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "benjamin mako hill" ORDER BY paper.year ASC;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "benjamin mako hill" GROUP BY t3.year ORDER BY t3.year;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
extra gold: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "semantic parsing" GROUP BY paper.year;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "semantic parsing" GROUP BY t3.year ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "Bacterial Wilt" AND paper.year  =  2016;
extra gold: SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  "Bacterial Wilt" AND t4.year  =  2016;

extra pred: SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN cite ON paper.paperId  =  cite.citedPaperId GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( cite.citingPaperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;

extra pred: SELECT DISTINCT journal.journalName FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN venue ON venue.venueId  =  paper.venueId JOIN journal ON venue.venueId  =  journal.journalId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName LIKE "Temporal Data";
extra gold: SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Temporal Data" GROUP BY t3.journalid;

extra pred: SELECT DISTINCT dataset.datasetName FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

extra pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "dan klein" AND paper.venueId  =  (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "dan klein" AND venue.venueName  =  "emnlp");
extra gold: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  "dan klein" AND t4.venuename  =  "emnlp";

hard pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Ye Cao" GROUP BY paper.year ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE "Ye Cao" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;

medium pred: SELECT SUM ( tip.likes ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN tip ON tip.business_id  =  business.business_id WHERE business.name  =  "Cafe Zinho" AND category.category_name  =  "category_category_name0";
medium gold: SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Cafe Zinho";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE venue.venueName  =  "NIPS";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS";

hard pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS" GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

hard pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet" AND paper.year  =  2014;
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS" GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

extra pred: SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) ,  writes.authorId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE venue.venueName  =  "chi" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.authorId ) DESC;
extra gold: SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "chi" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Stonebraker" AND paper.title  =  "GIS Database";
extra gold: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t5.keyphrasename  =  "GIS Database";

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
extra gold: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE "sensor fusion";

medium pred: SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM writes JOIN author ON writes.authorId  =  author.authorId GROUP BY writes.authorId HAVING COUNT ( DISTINCT writes.paperId )  >=  5;
medium gold: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "CVPR" GROUP BY paper.paperId ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  "CVPR" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Brian DeRenzi" GROUP BY keyphrase.keyphraseName ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Brian DeRenzi" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  writes.authorId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId WHERE dataset.datasetName LIKE "ImageNet" GROUP BY writes.authorId ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  "ImageNet" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;

hard pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId WHERE dataset.datasetName LIKE "WebKB";
hard gold: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Ameet Soni" AND author.authorName  =  "Ras Bodik";
extra gold: SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Ameet Soni" AND t1.authorname  =  "Ras Bodik";

extra pred: SELECT DISTINCT COUNT ( paper.paperId ) ,  keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS" GROUP BY keyphrase.keyphraseName ORDER BY COUNT ( paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

extra pred: SELECT DISTINCT journal.journalName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN journal ON paper.journalId  =  journal.journalId WHERE author.authorName  =  "Donald E Knuth" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Donald E Knuth" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Takashi Matsumoto";
extra gold: SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Takashi Matsumoto" GROUP BY t3.journalid;

medium pred: SELECT COUNT ( DISTINCT neighbourhood.neighbourhood_name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE business.city  =  "Madison" AND business.rating  =  5;
medium gold: SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  "Madison" AND t2.rating  =  5;

extra pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Dan Makumbi" AND paper.title  =  "Genetic Identity";
extra gold: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Dan Makumbi" AND t3.keyphrasename  =  "Genetic Identity";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN paper ON paper.paperId  =  paperDataset.paperId JOIN venue ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paperKeyphrase.paperId  =  paper.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND paper.year  =  2014 AND venue.venueName  =  "ACL";
extra gold: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Brian DeRenzi";
extra gold: SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Brian DeRenzi" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;

medium pred: SELECT DISTINCT cite.citedPaperId FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN cite ON paper.paperId  =  cite.citingPaperId GROUP BY cite.citedPaperId HAVING COUNT ( DISTINCT cite.citingPaperId )  >=  5;
medium gold: SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;

extra pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM paper JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  cite.citingPaperId JOIN author ON writes.authorId  =  author.authorId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "dan klein" AND author.authorName  =  "michael i. jordan";
extra gold: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "michael i. jordan" AND t1.authorname  =  "dan klein";

easy pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE paper.venueId IN (SELECT venue.venueId FROM
easy gold: SELECT DISTINCT venueid FROM venue WHERE venuename  =  "Neuroscience";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId WHERE dataset.datasetName LIKE "ImageNet";
hard gold: SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "ImageNet";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName!= "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
extra gold: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing";

extra pred: SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId WHERE keyphrase.keyphraseName  =  "Machine Learning" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
extra gold: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  "Machine Learning" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN venue ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE dataset.datasetName  =  "Jeopardy! Questions" AND keyphrase.keyphraseName  =  "Parsing" AND paper.year  =  2014 AND venue.venueName  =  "ACL";
extra gold: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  "Jeopardy! Questions" AND t1.keyphrasename  =  "Parsing" AND t2.year  =  2014 AND t6.venuename  =  "ACL";

extra pred: SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.name  =  "Vintner Grill" AND review.year  =  2010;
extra gold: SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  "Vintner Grill" AND t2.category_name  =  "category_category_name0" AND t3.year  =  2010;

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
extra gold: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE "sensor fusion";

hard pred: SELECT COUNT ( DISTINCT review.text ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN neighbourhood ON neighbourhood.business_id  =  business.business_id WHERE neighbourhood.neighbourhood_name  =  "South Summerlin";
hard gold: SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  "South Summerlin";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  writes.authorId FROM writes JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId WHERE writes.authorId  =  "Daniel A Reed" GROUP BY writes.authorId ORDER BY COUNT ( cite.citingPaperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  "Daniel A Reed" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;

extra pred: SELECT DISTINCT journal.journalName FROM paper JOIN journal ON paper.journalId  =  journal.journalId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade" AND paper.year  =  2010;
extra gold: SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade" AND t3.year  =  2010 GROUP BY t3.journalid;

hard pred: SELECT COUNT ( DISTINCT business.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "San Diego" AND review.year  =  2010 AND USER.name  =  "Christine";
hard gold: SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  "San Diego" AND t2.year  =  2010 AND t3.name  =  "Christine";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Pedro Domingos";
extra gold: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Pedro Domingos" GROUP BY t3.year;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "oren etzioni" GROUP BY keyphrase.keyphraseName ORDER BY COUNT (*) DESC;
extra gold: SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;

extra pred: SELECT DISTINCT COUNT ( cite.citedPaperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "michael i. jordan" AND author.authorName  =  "dan klein";
extra gold: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "michael i. jordan" AND t1.authorname  =  "dan klein";

extra pred: SELECT DISTINCT dataset.datasetId FROM paper JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "jitendra malik";
extra gold: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "ACL" EXCEPT SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "ACL" GROUP BY paper.paperId HAVING COUNT ( DISTINCT cite.citingPaperId )  <  5;
extra gold: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;

hard pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "Trophic Cascade";
hard gold: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade";

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" GROUP BY venue.venueId ORDER BY COUNT ( DISTINCT paper.paperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;

hard pred: SELECT DISTINCT COUNT ( paper.paperId ) FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "question answering" AND paper.year BETWEEN 2011 AND 2016;
hard gold: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "question answering" AND t3.year  >=  2011;

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "Neutralizing Antibody" AND paper.year  =  2012;
extra gold: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  "Neutralizing Antibody" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;

extra pred: SELECT DISTINCT keyphrase.keyphraseName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN venue ON venue.venueId  =  paper.venueId WHERE paper.year  =  2015 AND venue.venueName  =  "NIPS";
extra gold: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  "NIPS" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperDataset ON paper.paperId  =  paperDataset.paperId JOIN dataset ON paperDataset.datasetId  =  dataset.datasetId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.paperId  =  paper.paperId JOIN writes ON writes.
extra gold: SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE "the effects of juicing for cancer patients" AND YEAR  >  2006;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing";
extra gold: SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  "parsing";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Luke S Zettlemoyer";
extra gold: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Luke S Zettlemoyer" ORDER BY t3.year;

extra pred: SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah Smith" AND writes.paperId IN ( SELECT writes.paperId
extra gold: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != "Noah Smith" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE "Noah Smith" );

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "parsing" ORDER BY paper.numCiting DESC;
extra gold: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName!= "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
extra gold: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing";

extra pred: SELECT DISTINCT COUNT ( cite.citingPaperId ) ,  writes.authorId FROM writes JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId WHERE writes.authorId  =  "Daniel A Reed" GROUP BY writes.authorId ORDER BY COUNT ( cite.citingPaperId ) DESC;
extra gold: SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  "Daniel A Reed" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;

extra pred: SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
extra gold: SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  "deep learning" ORDER BY t4.year ASC;

extra pred: SELECT DISTINCT author.authorName FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE keyphrase.keyphraseName  =  "sensor fusion";
extra gold: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE "sensor fusion";

hard pred: SELECT DISTINCT COUNT ( DISTINCT writes.authorId ) FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId WHERE paper.year  =  2010 AND venue.venueName  =  "sigcse";
hard gold: SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  "sigcse";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Daniel Jurafsky";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Daniel Jurafsky";

extra pred: SELECT DISTINCT venue.venueName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "sergey levine" ORDER BY paper.year DESC;
extra gold: SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "sergey levine" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId JOIN cite ON writes.paperId  =  cite.citedPaperId JOIN writes ON writes.paperId  =  cite.citingPaperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "oren etzioni";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni";

extra pred: SELECT DISTINCT paper.paperId FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN paper ON paper.paperId  =  paperKeyphrase.paperId JOIN venue ON venue.venueId  =  paper.venueId WHERE keyphrase.keyphraseName  =  "Euclidean Distance" AND venue.venueName  =  "NIPS";
extra gold: SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Euclidean Distance" AND t4.venuename  =  "NIPS";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Armstrong" AND paper.year BETWEEN 1990 AND 2000;
extra gold: SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE "Michael Armstrong" AND t3.year LIKE "199";

extra pred: SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName!= "chris dyer" AND keyphrase.keyphraseName  =  "syntactic parsing";
extra gold: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != "chris dyer" AND t5.keyphrasename  =  "syntactic parsing";

hard pred: SELECT DISTINCT author.authorName FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN writes ON writes.paperId  =  paper.paperId JOIN author ON writes.authorId  =  author.authorId WHERE venue.venueName  =  "NIPS";
hard gold: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "NIPS";

extra pred: SELECT DISTINCT paper.year FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "Michael Stonebraker" AND paper.title  =  "GIS Database";
extra gold: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "Michael Stonebraker" AND t5.keyphrasename  =  "GIS Database";

hard pred: SELECT COUNT ( DISTINCT USER.name ) FROM category JOIN business ON category.business_id  =  business.business_id JOIN review ON review.business_id  =  business.business_id JOIN USER ON USER.user_id  =  review.user_id WHERE business.city  =  "Pittsburgh" AND category.category_name  =  "Sushi" AND review.text  =  "Sushi Too";
hard gold: SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  "Pittsburgh" AND t1.name  =  "Sushi Too";

extra pred: SELECT DISTINCT paper.paperId FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN paper ON writes.paperId  =  paper.paperId WHERE author.authorName  =  "oren etzioni";
extra gold: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni";

hard pred: SELECT DISTINCT COUNT ( DISTINCT writes.paperId ) ,  writes.authorId FROM writes JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Mary Crainie" GROUP BY writes.authorId ORDER BY COUNT ( DISTINCT writes.paperId ) DESC;
hard gold: SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Mary Crainie";

extra pred: SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "deep learning" ORDER BY paper.year ASC;
extra gold: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year ASC;

extra pred: SELECT DISTINCT author.authorName FROM writes JOIN author ON writes.authorId  =  author.authorId JOIN writes ON writes.paperId  =  writes.paperId JOIN author ON writes.authorId  =  author.authorId WHERE author.authorName  =  "Noah A Smith";
extra gold: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Noah A Smith";

extra pred: SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId WHERE venue.venueName  =  "ACL" EXCEPT SELECT DISTINCT paper.paperId ,  paper.year FROM venue JOIN paper ON venue.venueId  =  paper.venueId JOIN cite ON paper.paperId  =  cite.citedPaperId JOIN paperKeyphrase ON paper.paperId  =  paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId  =  keyphrase.keyphraseId WHERE keyphrase.keyphraseName  =  "ACL" GROUP BY paper.paperId HAVING COUNT ( DISTINCT cite.citingPaperId )  <  5;
extra gold: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;

easy pred: SELECT publication.reference_num FROM publication JOIN publication_keyword ON publication.pid  =  publication_keyword.pid JOIN keyword ON publication_keyword.kid  =  keyword.kid WHERE keyword.keyword  =  "Making database systems usable";
easy gold: SELECT reference_num FROM publication WHERE title  =  "Making database systems usable";

medium pred: SELECT count(*) FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE RESTAURANT.FOOD_TYPE  =  "denny" AND GEOGRAPHIC.REGION  =  "bay area";
medium gold: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.name  =  "denny";

extra pred: SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN organization ON organization.oid  =  journal.oid WHERE journal.name  =  "PVLDB" AND organization.name  =  "University of Michigan";
extra gold: SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  "PVLDB" AND t2.name  =  "University of Michigan";

hard pred: SELECT publication.title FROM publication JOIN cite ON publication.pid  =  cite.cited WHERE publication.year  >  2000 GROUP BY publication.title ORDER BY COUNT ( DISTINCT cite.citing ) DESC LIMIT 1;
hard gold: SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;

hard pred: SELECT citation_num FROM publication WHERE title  =  "Making database systems usable" AND YEAR  <  2010;
hard gold: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  "Making database systems usable" AND t2.year  <  2010;

medium pred: SELECT publication.title FROM publication JOIN cite ON publication.pid  =  cite.cited GROUP BY cite.cited ORDER BY COUNT ( DISTINCT cite.citing ) DESC LIMIT 1;
medium gold: SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;

extra pred: SELECT movie.title FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  (SELECT director.name FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE movie.title  =  "Revolutionary Road")
extra gold: SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  "Revolutionary Road";

extra pred: SELECT business.name FROM category JOIN business ON category.business_id  =  business.business_id GROUP BY business.name ORDER BY count(*) DESC LIMIT 1;
extra gold: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;

extra pred: SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY keyword.keyword ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  "H. V. Jagadish" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;

extra pred: SELECT COUNT ( DISTINCT movie.title  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN directed_by ON movie.mid  =  directed_by.msid JOIN director ON director.did  =  directed_by.did WHERE actor.name  =  "Taraneh Alidoosti" AND director.name  =  "Asghar Farhadi";
extra gold: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  "Taraneh Alidoosti" AND t3.name  =  "Asghar Farhadi";

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" INTERSECT SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "Yunyao Li" INTERSECT SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "Cong Yu"
extra gold: SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  "Cong Yu" AND t1.name  =  "H. V. Jagadish" AND t3.name  =  "Yunyao Li";

extra pred: SELECT author.name FROM writes JOIN author ON writes.aid  =  author.aid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava";
extra gold: SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  "H. V. Jagadish" AND t3.name  =  "Divesh Srivastava";

extra pred: SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN DOMAIN ON DOMAIN.did  =  publication.cid WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan" GROUP BY author.name ORDER BY SUM ( publication.citation_num ) DESC LIMIT 1;
extra gold: SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  "Databases" AND t6.name  =  "University of Michigan" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;

extra pred: SELECT journal.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE keyword.keyword  =  "Relational Database" GROUP BY journal.name ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  "Relational Database" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;

extra pred: SELECT author.name FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN writes ON writes.pid  =  writes
extra gold: SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish";

extra pred: SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.name  =  "Quentin Tarantino" ORDER BY movie.release_year DESC LIMIT 1
extra gold: SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  "Quentin Tarantino" ORDER BY t5.release_year DESC LIMIT 1;

extra pred: SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Jason Robards" INTERSECT SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Woody Strode"
extra gold: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  "Woody Strode" AND t2.name  =  "Jason Robards";

extra pred: SELECT journal.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE keyword.keyword  =  "Relational Database" GROUP BY journal.name ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  "Relational Database" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;

extra pred: SELECT conference.name FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN conference ON publication.cid  =  conference.cid WHERE keyword.keyword  =  "Relational Database" GROUP BY conference.name ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  "Relational Database" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;

extra pred: SELECT keyword.keyword FROM publication_keyword JOIN keyword ON publication_keyword.kid  =  keyword.kid JOIN publication ON publication.pid  =  publication_keyword.pid JOIN journal ON publication.jid  =  journal.jid WHERE journal.name  =  "PVLDB" GROUP BY keyword.keyword ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  "PVLDB" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;

extra pred: SELECT author.name FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
extra gold: SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish";

extra pred: SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Quentin Tarantino" AND movie.release_year  <  2002 INTERSECT SELECT COUNT ( DISTINCT movie.title  ) FROM director JOIN directed_by ON director.did  =  directed_by.did JOIN movie ON movie.mid  =  directed_by.msid WHERE director.name  =  "Quentin Tarantino" AND movie.release_year  >  2010
extra gold: SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  "Quentin Tarantino" AND t4.release_year  <  2010 AND t4.release_year  >  2002;

extra pred: SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.nationality  =  "China" GROUP BY movie.title ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  "China" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;

extra pred: SELECT COUNT ( DISTINCT author.name ) FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish";
extra gold: SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish";

medium pred: SELECT publication.year ,  SUM ( publication.citation_num ) FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN publication ON publication.pid  =  cite.citing WHERE publication.title  =  "Making database systems usable" GROUP BY publication.year;
medium gold: SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  "Making database systems usable" GROUP BY YEAR;

extra pred: SELECT LOCATION.HOUSE_NUMBER ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" AND RESTAURANT.RATING  =  ( SELECT MAX ( RESTAURANT.RATING ) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID WHERE LOCATION.CITY_NAME IN ( SELECT GEOGRAPHIC.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON GEOGRAPHIC.CITY_NAME  =  LOCATION.CITY_NAME WHERE GEOGRAPHIC.REGION  =  "bay area" ) AND RESTAURANT.FOOD_TYPE  =  "american" );
extra gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );

extra pred: SELECT journal.name FROM publication JOIN journal ON publication.jid  =  journal.jid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY journal.name ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;

medium pred: SELECT count(*) FROM RESTAURANT JOIN LOCATION ON RESTAURANT.ID  =  LOCATION.RESTAURANT_ID JOIN GEOGRAPHIC ON LOCATION.CITY_NAME  =  GEOGRAPHIC.CITY_NAME WHERE GEOGRAPHIC.COUNTY  =  "santa cruz county" AND RESTAURANT.FOOD_TYPE  =  "jamerican";
medium gold: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  "santa cruz county" AND t1.name  =  "jamerican cuisine";

extra pred: SELECT movie.title FROM classification JOIN genre ON classification.gid  =  genre.gid JOIN movie ON movie.mid  =  classification.msid GROUP BY classification.msid ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;

extra pred: SELECT publication.title FROM publication JOIN writes ON publication.pid  =  writes.pid JOIN writes ON writes.pid  =  writes.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND author.name  =  "Divesh Srivastava" ORDER BY publication.citation_num DESC;
extra gold: SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  "Divesh Srivastava" AND t1.name  =  "H. V. Jagadish" ORDER BY t5.citation_num DESC LIMIT 1;

extra pred: SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid WHERE organization.name  =  "University of Michigan" AND publication.citation_num  >  5000;
extra gold: SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;

hard pred: SELECT actor.name FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Alan Turing" AND movie.title  =  "The Imitation Game";
hard gold: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  "Alan Turing" AND t3.title  =  "The Imitation Game";

extra pred: SELECT COUNT ( DISTINCT author.name ) FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid JOIN DOMAIN ON DOMAIN.did  =  publication.domain_id WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan";
extra gold: SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  "Databases" AND t2.name  =  "University of Michigan";

extra pred: SELECT COUNT ( DISTINCT actor.name  ) FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid JOIN CAST ON movie.mid  =  CAST.msid JOIN actor ON CAST.aid  =  actor.aid WHERE actor.nationality  =  "Iran" AND CAST.role  =  "actor" AND actor.name  =  "Jim Jarmusch";
extra gold: SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  "Iran" AND t3.name  =  "Jim Jarmusch";

extra pred: SELECT movie.title FROM CAST JOIN actor ON CAST.aid  =  actor.aid JOIN movie ON movie.mid  =  CAST.msid WHERE actor.name  =  "Gabriele Ferzetti" ORDER BY movie.release_year DESC LIMIT 1
extra gold: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  "Gabriele Ferzetti" ORDER BY t3.release_year DESC LIMIT 1;

extra pred: SELECT conference.name FROM publication JOIN conference ON publication.cid  =  conference.cid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" GROUP BY conference.name ORDER BY COUNT (*) DESC LIMIT 1;
extra gold: SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;

extra pred: SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid JOIN writes ON writes.aid  =  author.aid JOIN publication ON writes.pid  =  publication.pid WHERE organization.name  =  "University of Michigan" AND publication.citation_num  >  5000;
extra gold: SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  "Databases" AND t5.name  =  "University of Michigan" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;

hard pred: SELECT LOCATION.STREET_NAME ,  RESTAURANT.NAME FROM LOCATION JOIN RESTAURANT ON LOCATION.RESTAURANT_ID  =  RESTAURANT.ID WHERE LOCATION.CITY_NAME  =  "yosemite and mono lake area" AND RESTAURANT.FOOD_TYPE  =  "french" AND RESTAURANT.RATING  >  2.5;
hard gold: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;

extra pred: SELECT author.name FROM organization JOIN author ON organization.oid  =  author.oid WHERE organization.name  =  "University of Michigan" GROUP BY author.name ORDER BY SUM ( publication.citation_num ) DESC LIMIT 1;
extra gold: SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  "University of Michigan" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;

extra pred: SELECT COUNT ( DISTINCT publication.title ) FROM publication JOIN domain_publication ON publication.pid  =  domain_publication.pid JOIN DOMAIN ON DOMAIN.did  =  domain_publication.did JOIN organization ON organization.oid  =  author.oid WHERE DOMAIN.name  =  "Databases" AND organization.name  =  "University of Michigan";
extra gold: SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  "Databases" AND t5.name  =  "University of Michigan";

extra pred: SELECT author.name FROM publication JOIN cite ON publication.pid  =  cite.cited JOIN writes ON writes.pid  =  publication.pid JOIN writes ON writes.pid  =  publication.pid JOIN author ON writes.aid  =  author.aid JOIN author ON writes.aid  =  author.aid WHERE author.name  =  "H. V. Jagadish" AND publication.year  >  2000;
extra gold: SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  "H. V. Jagadish" AND t5.year  >  2000;

                     easy                 medium               hard                 extra                all                 
count                36                   69                   208                  446                  759                 
=====================   EXECUTION ACCURACY     =====================
execution            0.972                0.957                0.923                0.821                0.868               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.861                0.797                0.668                0.527                0.606               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                0.986                0.894                0.749                0.823               
select(no AGG)       1.000                0.986                0.894                0.756                0.827               
where                0.903                0.908                0.805                0.834                0.836               
where(no OP)         0.903                0.923                0.895                0.871                0.884               
group(no Having)     0.000                0.667                0.667                0.901                0.868               
group                0.000                0.667                0.667                0.901                0.868               
order                0.000                0.000                0.545                0.821                0.791               
and/or               1.000                1.000                0.995                0.968                0.980               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.935                0.971                0.860                0.831                0.857               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.972                0.986                0.889                0.738                0.813               
select(no AGG)       0.972                0.986                0.889                0.744                0.817               
where                0.875                0.908                0.797                0.821                0.824               
where(no OP)         0.875                0.923                0.886                0.857                0.872               
group(no Having)     0.000                1.000                1.000                0.707                0.730               
group                0.000                1.000                1.000                0.707                0.730               
order                0.000                0.000                0.857                0.722                0.723               
and/or               1.000                0.986                0.981                0.979                0.981               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.906                0.971                0.856                0.818                0.846               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.986                0.986                0.892                0.744                0.818               
select(no AGG)       0.986                0.986                0.892                0.750                0.822               
where                0.889                0.908                0.801                0.827                0.830               
where(no OP)         0.889                0.923                0.891                0.864                0.878               
group(no Having)     1.000                0.800                0.800                0.792                0.793               
group                1.000                0.800                0.800                0.792                0.793               
order                1.000                1.000                0.667                0.768                0.756               
and/or               1.000                0.993                0.988                0.974                0.981               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             0.921                0.971                0.858                0.825                0.851               
